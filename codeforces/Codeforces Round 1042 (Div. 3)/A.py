"""
–ó–∞–¥–∞—á–∞ A. Lever (Codeforces 2131)

–í–æ –≤—Å–µ–ª–µ–Ω–Ω–æ–π Divergent, The Lever –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∏—Ç–µ—Ä–∞—Ü–∏–∏ —Å –¥–≤—É–º—è –º–∞—Å—Å–∏–≤–∞–º–∏ a –∏ b –¥–ª–∏–Ω—ã n. 
–í –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ Lever –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:

1. –í—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –∏–Ω–¥–µ–∫—Å i, —Ç–∞–∫–æ–π —á—Ç–æ a[i] > b[i], –∏ —É–º–µ–Ω—å—à–∞–µ—Ç a[i] –Ω–∞ 1.
2. –í—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω—ã–π –∏–Ω–¥–µ–∫—Å i, —Ç–∞–∫–æ–π —á—Ç–æ a[i] < b[i], –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç a[i] –Ω–∞ 1.

–ò—Ç–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è, –µ—Å–ª–∏ —à–∞–≥ 1 –±—ã–ª –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω.

–í–∞—à–∞ –∑–∞–¥–∞—á–∞ ‚Äî –Ω–∞–π—Ç–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Ç–µ—Ä–∞—Ü–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–ø–æ–ª–Ω–∏—Ç Lever, —á—Ç–æ–±—ã –º–∞—Å—Å–∏–≤ a —Å—Ç–∞–ª —Ä–∞–≤–Ω—ã–º –º–∞—Å—Å–∏–≤—É b.

–í—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:
- t (1 ‚â§ t ‚â§ 10^4) ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–µ—Å—Ç–æ–≤.
- –î–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–µ—Å—Ç–∞:
  - n (1 ‚â§ n ‚â§ 10) ‚Äî –¥–ª–∏–Ω–∞ –º–∞—Å—Å–∏–≤–æ–≤.
  - –ú–∞—Å—Å–∏–≤ a –¥–ª–∏–Ω—ã n.
  - –ú–∞—Å—Å–∏–≤ b –¥–ª–∏–Ω—ã n.

–í—ã—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:
- –î–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–µ—Å—Ç–∞ –≤—ã–≤–µ–¥–∏—Ç–µ –æ–¥–Ω–æ —á–∏—Å–ª–æ ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Ç–µ—Ä–∞—Ü–∏–π.

–ü—Ä–∏–º–µ—Ä:
–í—Ö–æ–¥:
4
2
7 3
5 6
3
3 1 4
3 1 4
1
10
1
6
1 1 4 5 1 4
1 9 1 9 8 1

–í—ã—Ö–æ–¥:
3
1
10
7
"""

def count_iterations(n, a, b):
    """
    –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Ç–µ—Ä–∞—Ü–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç –†—ã—á–∞–≥,
    –ø—Ä–µ–æ–±—Ä–∞–∑—É—è –º–∞—Å—Å–∏–≤ a –≤ –º–∞—Å—Å–∏–≤ b —Å–æ–≥–ª–∞—Å–Ω–æ –ø—Ä–∞–≤–∏–ª–∞–º –∑–∞–¥–∞—á–∏.

    –ù–∞ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏:
    1. –ï—Å–ª–∏ –µ—Å—Ç—å –∏–Ω–¥–µ–∫—Å i —Å a[i] > b[i], —É–º–µ–Ω—å—à–∞–µ–º a[i] –Ω–∞ 1.
       –ï—Å–ª–∏ —Ç–∞–∫–∏—Ö –∏–Ω–¥–µ–∫—Å–æ–≤ –Ω–µ—Ç, —à–∞–≥ –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç—Å—è.
    2. –ï—Å–ª–∏ –µ—Å—Ç—å –∏–Ω–¥–µ–∫—Å i —Å a[i] < b[i], —É–≤–µ–ª–∏—á–∏–≤–∞–µ–º a[i] –Ω–∞ 1.
       –ï—Å–ª–∏ —Ç–∞–∫–∏—Ö –∏–Ω–¥–µ–∫—Å–æ–≤ –Ω–µ—Ç, —à–∞–≥ –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç—Å—è.
    –ò—Ç–µ—Ä–∞—Ü–∏—è —Å—á–∏—Ç–∞–µ—Ç—Å—è –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–π, –¥–∞–∂–µ –µ—Å–ª–∏ –ø–µ—Ä–≤—ã–π —à–∞–≥ –±—ã–ª –ø—Ä–æ–ø—É—â–µ–Ω,
    –Ω–æ –ø–æ—Å–ª–µ —Ç–∞–∫–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è.

    Args:
        n (int): –¥–ª–∏–Ω–∞ –º–∞—Å—Å–∏–≤–æ–≤ a –∏ b.
        a (list[int]): –∏—Å—Ö–æ–¥–Ω—ã–π –º–∞—Å—Å–∏–≤.
        b (list[int]): —Ü–µ–ª–µ–≤–æ–π –º–∞—Å—Å–∏–≤.

    Returns:
        int: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∏—Ç–µ—Ä–∞—Ü–∏–π.
    """
    a = a[:]  # –∫–æ–ø–∏—è –º–∞—Å—Å–∏–≤–∞
    iterations = 0

    while True:
        idx_dec = next((i for i in range(n) if a[i] > b[i]), None)
        if idx_dec is None:
            # –®–∞–≥ 1 –ø—Ä–æ–ø—É—â–µ–Ω ‚Äî —Å—á–∏—Ç–∞–µ–º —ç—Ç—É –∏—Ç–µ—Ä–∞—Ü–∏—é –∏ –∑–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å
            iterations += 1
            break

        a[idx_dec] -= 1

        idx_inc = next((i for i in range(n) if a[i] < b[i]), None)
        if idx_inc is not None:
            a[idx_inc] += 1

        iterations += 1

    return iterations


def main():
    t = int(input())
    for _ in range(t):
        n = int(input())
        a = list(map(int, input().split()))
        b = list(map(int, input().split()))
        print(count_iterations(n, a, b))


if __name__ == "__main__":
    main()

''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks