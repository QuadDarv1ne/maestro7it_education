/*
euclid_gcd.go
Реализация алгоритма Евклида для вычисления НОД

Программа запрашивает два положительных целых числа,
вычисляет их НОД с помощью алгоритма Евклида и выводит результат.
Обрабатывает некорректный ввод и случай (0,0).
*/

package main

import "fmt"

/*
gcd Вычисляет НОД двух чисел по алгоритму Евклида

Параметры:
  a - первое число (неотрицательное)
  b - второе число (неотрицательное)

Возвращает:
  uint - вычисленный НОД (если определен)
  bool - флаг успешного вычисления (false для (0,0))
*/
func gcd(a, b uint) (uint, bool) {
    if a == 0 && b == 0 {
        return 0, false
    }
    for b != 0 {
        a, b = b, a%b
    }
    return a, true
}

func main() {
    var num1, num2 uint
    fmt.Print("Введите два положительных целых числа: ")
    
    // Обработка ввода с проверкой ошибок
    _, err := fmt.Scanf("%d %d", &num1, &num2)
    for err != nil || num1 < 0 || num2 < 0 {
        fmt.Print("Ошибка! Введите положительные целые числа: ")
        _, err = fmt.Scanf("%d %d", &num1, &num2)
    }

    // Вычисление и вывод результата
    if result, ok := gcd(num1, num2); ok {
        fmt.Printf("НОД(%d, %d) = %d\n", num1, num2, result)
    } else {
        fmt.Println("НОД(0, 0) не определён")
    }
}
