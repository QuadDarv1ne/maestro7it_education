/**
 * üìú SQL-—Å–∫—Ä–∏–ø—Ç: create_simple_hr_db.sql
 **/

-- 1. –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (–µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
CREATE DATABASE IF NOT EXISTS simple_hr_db
  CHARACTER SET utf8mb4
  COLLATE utf8mb4_unicode_ci;

-- 2. –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
USE simple_hr_db;

-- 3. –¢–∞–±–ª–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è)
CREATE TABLE IF NOT EXISTS `user` (
    id INT PRIMARY KEY AUTO_INCREMENT,
    username VARCHAR(80) NOT NULL UNIQUE,
    password_hash VARCHAR(256) NOT NULL,
    role ENUM('admin', 'hr') NOT NULL
) ENGINE=InnoDB;

-- 4. –ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
CREATE TABLE IF NOT EXISTS `department` (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100) NOT NULL UNIQUE
) ENGINE=InnoDB;

-- 5. –î–æ–ª–∂–Ω–æ—Å—Ç–∏
CREATE TABLE IF NOT EXISTS `position` (
    id INT PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR(100) NOT NULL UNIQUE
) ENGINE=InnoDB;

-- 6. –°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏
CREATE TABLE IF NOT EXISTS `employee` (
    id INT PRIMARY KEY AUTO_INCREMENT,
    full_name VARCHAR(150) NOT NULL,
    email VARCHAR(120) NOT NULL UNIQUE,
    employee_id VARCHAR(50) NOT NULL UNIQUE COMMENT '–¢–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä',
    hire_date DATE NOT NULL,
    status ENUM('active', 'dismissed') NOT NULL DEFAULT 'active',
    department_id INT NOT NULL,
    position_id INT NOT NULL,
    
    -- –í–Ω–µ—à–Ω–∏–µ –∫–ª—é—á–∏
    FOREIGN KEY (department_id) REFERENCES department(id)
        ON DELETE RESTRICT ON UPDATE CASCADE,
    FOREIGN KEY (position_id) REFERENCES position(id)
        ON DELETE RESTRICT ON UPDATE CASCADE
) ENGINE=InnoDB;

-- 7. –ö–∞–¥—Ä–æ–≤—ã–µ –ø—Ä–∏–∫–∞–∑—ã
CREATE TABLE IF NOT EXISTS `order` (
    id INT PRIMARY KEY AUTO_INCREMENT,
    employee_id INT NOT NULL,
    type ENUM('hire', 'transfer', 'dismissal') NOT NULL,
    date_issued DATE NOT NULL,
    new_department_id INT NULL,
    new_position_id INT NULL,
    
    -- –í–Ω–µ—à–Ω–∏–µ –∫–ª—é—á–∏
    FOREIGN KEY (employee_id) REFERENCES employee(id)
        ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (new_department_id) REFERENCES department(id)
        ON DELETE SET NULL ON UPDATE CASCADE,
    FOREIGN KEY (new_position_id) REFERENCES position(id)
        ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB;

-- 8. –û—Ç–ø—É—Å–∫–∞
CREATE TABLE IF NOT EXISTS `vacation` (
    id INT PRIMARY KEY AUTO_INCREMENT,
    employee_id INT NOT NULL,
    start_date DATE NOT NULL,
    end_date DATE NOT NULL,
    type ENUM('paid', 'unpaid', 'sick') NOT NULL,
    
    -- –ü—Ä–æ–≤–µ—Ä–∫–∞: –¥–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è >= –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ (—Ä–µ–∞–ª–∏–∑—É–µ—Ç—Å—è –Ω–∞ —É—Ä–æ–≤–Ω–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, —Ç.–∫. MySQL < 8.0.16 –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç CHECK)
    FOREIGN KEY (employee_id) REFERENCES employee(id)
        ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

-- 9. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
CREATE TABLE IF NOT EXISTS `notification` (
    id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT NOT NULL,
    title VARCHAR(200) NOT NULL,
    message TEXT NOT NULL,
    is_read BOOLEAN DEFAULT FALSE NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    
    FOREIGN KEY (user_id) REFERENCES user(id)
        ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

-- 10. –ê—É–¥–∏—Ç –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
CREATE TABLE IF NOT EXISTS `audit_log` (
    id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT NOT NULL,
    action VARCHAR(100) NOT NULL,
    entity_type VARCHAR(50) NOT NULL,
    entity_id INT NULL,
    description TEXT NULL,
    ip_address VARCHAR(45) NULL,
    user_agent TEXT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL,
    
    FOREIGN KEY (user_id) REFERENCES user(id)
        ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;

-- 11. –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
CREATE INDEX idx_employee_status ON employee(status);
CREATE INDEX idx_employee_department ON employee(department_id);
CREATE INDEX idx_employee_name ON employee(full_name);
CREATE INDEX idx_vacation_dates ON vacation(start_date, end_date);
CREATE INDEX idx_order_date ON `order`(date_issued);
CREATE INDEX idx_notification_user ON notification(user_id);
CREATE INDEX idx_notification_created ON notification(created_at);
CREATE INDEX idx_audit_user ON audit_log(user_id);
CREATE INDEX idx_audit_action ON audit_log(action);
CREATE INDEX idx_audit_entity ON audit_log(entity_type, entity_id);
CREATE INDEX idx_audit_created ON audit_log(created_at);
