# ============================================================================
# utils/educational.py
# ============================================================================

"""
–ú–æ–¥—É–ª—å: utils/educational.py

–û–ø–∏—Å–∞–Ω–∏–µ:
    –°–æ–¥–µ—Ä–∂–∏—Ç –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —à–∞—Ö–º–∞—Ç–Ω–æ–π –∏–≥—Ä—ã chess_stockfish.
    –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–¥—Å–∫–∞–∑–∫–∏, –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –∏ –æ–±—É—á–∞—é—â–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –¥–ª—è –∏–≥—Ä–æ–∫–æ–≤.
    
–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
    - –ü–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ —à–∞—Ö–º–∞—Ç–Ω—ã–º —Ñ–∏–≥—É—Ä–∞–º –∏ –∏—Ö –¥–≤–∏–∂–µ–Ω–∏—è–º
    - –û–±—ä—è—Å–Ω–µ–Ω–∏—è —à–∞—Ö–º–∞—Ç–Ω—ã—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤
    - –°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã
    - –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ —Ñ–∞–∫—Ç—ã –æ —à–∞—Ö–º–∞—Ç–∞—Ö
    - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–µ–±—é—Ç–∞—Ö –∏ –∏—Ö —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞—Ö
"""

from typing import Dict, List, Optional, Tuple
import random

# –®–∞—Ö–º–∞—Ç–Ω—ã–µ —Ç–µ—Ä–º–∏–Ω—ã –∏ –∏—Ö –æ–±—ä—è—Å–Ω–µ–Ω–∏—è
CHESS_TERMS = {
    "—à–∞—Ö": "–£–≥—Ä–æ–∑–∞ –∫–æ—Ä–æ–ª—é. –ö–æ—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞—â–∏—â–µ–Ω.",
    "–º–∞—Ç": "–ö–æ—Ä–æ–ª—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–¥ —É–¥–∞—Ä–æ–º –∏ –Ω–µ –º–æ–∂–µ—Ç —É–π—Ç–∏ –æ—Ç —É–≥—Ä–æ–∑—ã.",
    "–ø–∞—Ç": "–£ –∏–≥—Ä–æ–∫–∞ –Ω–µ—Ç –ª–µ–≥–∞–ª—å–Ω—ã—Ö —Ö–æ–¥–æ–≤, –Ω–æ –∫–æ—Ä–æ–ª—å –Ω–µ –ø–æ–¥ —à–∞—Ö–æ–º.",
    "—Ä–æ–∫–∏—Ä–æ–≤–∫–∞": "–•–æ–¥, –ø—Ä–∏ –∫–æ—Ç–æ—Ä–æ–º –∫–æ—Ä–æ–ª—å –∏ –ª–∞–¥—å—è –ø–µ—Ä–µ–º–µ—â–∞—é—Ç—Å—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ.",
    "–≤–∑—è—Ç–∏–µ –Ω–∞ –ø—Ä–æ—Ö–æ–¥–µ": "–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –≤–∑—è—Ç–∏–µ –ø–µ—à–∫–∏, –∫–æ—Ç–æ—Ä–∞—è —Å–¥–µ–ª–∞–ª–∞ —Ö–æ–¥ –Ω–∞ –¥–≤–µ –∫–ª–µ—Ç–∫–∏.",
    "–ø—Ä–µ–≤—Ä–∞—â–µ–Ω–∏–µ": "–ö–æ–≥–¥–∞ –ø–µ—à–∫–∞ –¥–æ—Å—Ç–∏–≥–∞–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–π –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏, –æ–Ω–∞ –ø—Ä–µ–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –ª—é–±—É—é —Ñ–∏–≥—É—Ä—É.",
    "—Ü—É–≥—Ü–≤–∞–Ω–≥": "–ü–æ–ª–æ–∂–µ–Ω–∏–µ, –∫–æ–≥–¥–∞ –ª—é–±–æ–π —Ö–æ–¥ —É—Ö—É–¥—à–∞–µ—Ç –ø–æ–∑–∏—Ü–∏—é –∏–≥—Ä–æ–∫–∞.",
    "—Ñ–æ—Ä–∫": "–•–æ–¥, –∞—Ç–∞–∫—É—é—â–∏–π –¥–≤–µ –∏–ª–∏ –±–æ–ª–µ–µ —Ñ–∏–≥—É—Ä –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ.",
    "–ø–∏–Ω": "–§–∏–≥—É—Ä–∞ –Ω–µ –º–æ–∂–µ—Ç –¥–≤–∏–≥–∞—Ç—å—Å—è, —Ç–∞–∫ –∫–∞–∫ –∑–∞—â–∏—â–∞–µ—Ç –±–æ–ª–µ–µ —Ü–µ–Ω–Ω—É—é —Ñ–∏–≥—É—Ä—É.",
    "—Å–∫—Ä—ã—Ç–∞—è –∞—Ç–∞–∫–∞": "–ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ —Ñ–∏–≥—É—Ä—ã, –æ—Ç–∫—Ä—ã–≤–∞—é—â–µ–µ –ª–∏–Ω–∏—é –∞—Ç–∞–∫–∏ –¥—Ä—É–≥–æ–π —Ñ–∏–≥—É—Ä—ã."
}

# –ü–æ–¥—Å–∫–∞–∑–∫–∏ –ø–æ —Ñ–∏–≥—É—Ä–∞–º
PIECE_HINTS = {
    "–ø–µ—à–∫–∞": "–ü–µ—à–∫–∞ —Ö–æ–¥–∏—Ç –≤–ø–µ—Ä—ë–¥ –Ω–∞ –æ–¥–Ω—É –∫–ª–µ—Ç–∫—É, –Ω–æ –Ω–∞ –ø–µ—Ä–≤–æ–º —Ö–æ–¥—É –º–æ–∂–µ—Ç –Ω–∞ –¥–≤–µ. –ë—å—ë—Ç –ø–æ –¥–∏–∞–≥–æ–Ω–∞–ª–∏.",
    "–ª–∞–¥—å—è": "–õ–∞–¥—å—è —Ö–æ–¥–∏—Ç –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏ –∏ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏ –Ω–∞ –ª—é–±–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–µ—Ç–æ–∫.",
    "–∫–æ–Ω—å": "–ö–æ–Ω—å —Ö–æ–¥–∏—Ç –±—É–∫–≤–æ–π '–ì' - –¥–≤–µ –∫–ª–µ—Ç–∫–∏ –≤ –æ–¥–Ω–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏ –∏ –æ–¥–Ω—É –≤ –ø–µ—Ä–ø–µ–Ω–¥–∏–∫—É–ª—è—Ä–Ω–æ–º.",
    "—Å–ª–æ–Ω": "–°–ª–æ–Ω —Ö–æ–¥–∏—Ç –ø–æ –¥–∏–∞–≥–æ–Ω–∞–ª–∏ –Ω–∞ –ª—é–±–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–µ—Ç–æ–∫.",
    "—Ñ–µ—Ä–∑—å": "–§–µ—Ä–∑—å –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –¥–≤–∏–∂–µ–Ω–∏—è –ª–∞–¥—å–∏ –∏ —Å–ª–æ–Ω–∞ - —Ö–æ–¥–∏—Ç –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏, –≤–µ—Ä—Ç–∏–∫–∞–ª–∏ –∏ –¥–∏–∞–≥–æ–Ω–∞–ª–∏.",
    "–∫–æ—Ä–æ–ª—å": "–ö–æ—Ä–æ–ª—å —Ö–æ–¥–∏—Ç –Ω–∞ –æ–¥–Ω—É –∫–ª–µ—Ç–∫—É –≤ –ª—é–±–æ–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–∏."
}

# –°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–µ —Å–æ–≤–µ—Ç—ã
STRATEGIC_TIPS = [
    "–ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–π—Ç–µ —Ü–µ–Ω—Ç—Ä –¥–æ—Å–∫–∏ —Å–≤–æ–∏–º–∏ –ø–µ—à–∫–∞–º–∏ –∏ —Ñ–∏–≥—É—Ä–∞–º–∏.",
    "–†–∞–∑–≤–∏–≤–∞–π—Ç–µ —Å–≤–æ–∏ —Ñ–∏–≥—É—Ä—ã –∫–∞–∫ –º–æ–∂–Ω–æ –±—ã—Å—Ç—Ä–µ–µ –≤ –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã.",
    "–ù–µ –¥–≤–∏–≥–∞–π—Ç–µ –æ–¥–Ω—É –∏ —Ç—É –∂–µ —Ñ–∏–≥—É—Ä—É –¥–≤–∞–∂–¥—ã –≤ –¥–µ–±—é—Ç–µ.",
    "–°–≤–µ–¥–∏—Ç–µ –∫ –º–∏–Ω–∏–º—É–º—É –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–µ—à–µ—á–Ω—ã—Ö —Ö–æ–¥–æ–≤ –≤ –¥–µ–±—é—Ç–µ.",
    "–†–æ–∫–∏—Ä—É–π—Ç–µ—Å—å –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∫–æ—Ä–æ–ª—è.",
    "–°–ª–∞–±—ã–µ –ø–µ—à–∫–∏ (–∏–∑–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ, —Å–¥–≤–æ–µ–Ω–Ω—ã–µ) - —Å–ª–∞–±–æ–µ –∑–≤–µ–Ω–æ –≤ –ø–æ–∑–∏—Ü–∏–∏.",
    "–í—Å–µ–≥–¥–∞ –¥—É–º–∞–π—Ç–µ –æ –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è—Ö —Å–≤–æ–µ–≥–æ —Ö–æ–¥–∞.",
    "–ò—â–∏—Ç–µ —Ç–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ —Ö–æ–¥–∞ –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞.",
    "–°–æ–∑–¥–∞–≤–∞–π—Ç–µ —É–≥—Ä–æ–∑—ã, –∑–∞—Å—Ç–∞–≤–ª—è—è –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–∞ –∑–∞—â–∏—â–∞—Ç—å—Å—è.",
    "–ö–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–π—Ç–µ –¥–µ–π—Å—Ç–≤–∏—è –≤—Å–µ—Ö —Å–≤–æ–∏—Ö —Ñ–∏–≥—É—Ä."
]

# –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ —Ñ–∞–∫—Ç—ã
HISTORICAL_FACTS = [
    "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–∞–≤–∏–ª–∞ —à–∞—Ö–º–∞—Ç –±—ã–ª–∏ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω—ã –≤ 15 –≤–µ–∫–µ –≤ –ï–≤—Ä–æ–ø–µ.",
    "–ü–µ—Ä–≤—ã–π —á–µ–º–ø–∏–æ–Ω –º–∏—Ä–∞ –ø–æ —à–∞—Ö–º–∞—Ç–∞–º –±—ã–ª –í–∏–ª—å–≥–µ–ª—å–º –°—Ç–µ–π–Ω–∏—Ü –≤ 1886 –≥–æ–¥—É.",
    "–°–∞–º–∞—è –¥–ª–∏–Ω–Ω–∞—è —à–∞—Ö–º–∞—Ç–Ω–∞—è –ø–∞—Ä—Ç–∏—è —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏ –º–æ–∂–µ—Ç –¥–ª–∏—Ç—å—Å—è 5949 —Ö–æ–¥–æ–≤.",
    "–°–∞–º–∞—è –∫–æ—Ä–æ—Ç–∫–∞—è –≤–æ–∑–º–æ–∂–Ω–∞—è –ø–∞—Ä—Ç–∏—è - —ç—Ç–æ '–¥—É—Ä–∞—Ü–∫–∏–π –º–∞—Ç' –∑–∞ 2 —Ö–æ–¥–∞.",
    "–ì–∞—Ä—Ä–∏ –ö–∞—Å–ø–∞—Ä–æ–≤ –±—ã–ª —Å–∞–º—ã–º –º–æ–ª–æ–¥—ã–º —á–µ–º–ø–∏–æ–Ω–æ–º –º–∏—Ä–∞ –≤ –≤–æ–∑—Ä–∞—Å—Ç–µ 22 –ª–µ—Ç.",
    "–ú–∞–≥–Ω—É—Å –ö–∞—Ä–ª—Å–µ–Ω —Å—Ç–∞–ª —á–µ–º–ø–∏–æ–Ω–æ–º –º–∏—Ä–∞ –≤ 2013 –≥–æ–¥—É –≤ –≤–æ–∑—Ä–∞—Å—Ç–µ 22 –ª–µ—Ç.",
    "–®–∞—Ö–º–∞—Ç—ã –ø—Ä–∏–∑–Ω–∞–Ω—ã —Å–ø–æ—Ä—Ç–æ–º –ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–º –æ–ª–∏–º–ø–∏–π—Å–∫–∏–º –∫–æ–º–∏—Ç–µ—Ç–æ–º.",
    "–ü–µ—Ä–≤–∞—è —à–∞—Ö–º–∞—Ç–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞ –≤ 1951 –≥–æ–¥—É.",
    "Deep Blue –æ—Ç IBM –≤ 1997 –≥–æ–¥—É –≤–ø–µ—Ä–≤—ã–µ –ø–æ–±–µ–¥–∏–ª –¥–µ–π—Å—Ç–≤—É—é—â–µ–≥–æ —á–µ–º–ø–∏–æ–Ω–∞ –º–∏—Ä–∞.",
    "AlphaZero –æ—Ç DeepMind –Ω–∞—É—á–∏–ª—Å—è –∏–≥—Ä–∞—Ç—å –≤ —à–∞—Ö–º–∞—Ç—ã –∑–∞ 4 —á–∞—Å–∞ –∏ —Å—Ç–∞–ª —Å–∏–ª—å–Ω–µ–µ –≤—Å–µ—Ö –ø—Ä–æ–≥—Ä–∞–º–º."
]

class ChessEducator:
    """
    –ö–ª–∞—Å—Å –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –ø–æ —à–∞—Ö–º–∞—Ç–∞–º.
    """
    
    def __init__(self):
        self.move_counter = 0
        self.last_tip_time = 0
        self.tips_shown = set()
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º OpeningBook –≤–Ω—É—Ç—Ä–∏ –∫–ª–∞—Å—Å–∞ —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
        from utils.opening_book import OpeningBook
        self.opening_book = OpeningBook()
    
    def get_random_tip(self) -> str:
        """
        –ü–æ–ª—É—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π —Å—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–π —Å–æ–≤–µ—Ç.
        
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
            str: –°—Ç—Ä–∞—Ç–µ–≥–∏—á–µ—Å–∫–∏–π —Å–æ–≤–µ—Ç
        """
        return random.choice(STRATEGIC_TIPS)
    
    def get_piece_hint(self, piece_name: str) -> str:
        """
        –ü–æ–ª—É—á–∏—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É –ø–æ –¥–≤–∏–∂–µ–Ω–∏—é —Ñ–∏–≥—É—Ä—ã.
        
        –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
            piece_name (str): –ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏–≥—É—Ä—ã
            
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
            str: –ü–æ–¥—Å–∫–∞–∑–∫–∞ –ø–æ –¥–≤–∏–∂–µ–Ω–∏—é —Ñ–∏–≥—É—Ä—ã
        """
        return PIECE_HINTS.get(piece_name.lower(), "–ù–µ—Ç –ø–æ–¥—Å–∫–∞–∑–∫–∏ –¥–ª—è —ç—Ç–æ–π —Ñ–∏–≥—É—Ä—ã")
    
    def get_term_explanation(self, term: str) -> str:
        """
        –ü–æ–ª—É—á–∏—Ç—å –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ —à–∞—Ö–º–∞—Ç–Ω–æ–≥–æ —Ç–µ—Ä–º–∏–Ω–∞.
        
        –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
            term (str): –®–∞—Ö–º–∞—Ç–Ω—ã–π —Ç–µ—Ä–º–∏–Ω
            
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
            str: –û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Ç–µ—Ä–º–∏–Ω–∞
        """
        return CHESS_TERMS.get(term.lower(), "–ù–µ—Ç –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –¥–ª—è —ç—Ç–æ–≥–æ —Ç–µ—Ä–º–∏–Ω–∞")
    
    def get_historical_fact(self) -> str:
        """
        –ü–æ–ª—É—á–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç –æ —à–∞—Ö–º–∞—Ç–∞—Ö.
        
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
            str: –ò—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–π —Ñ–∞–∫—Ç
        """
        return random.choice(HISTORICAL_FACTS)
    
    def should_show_tip(self, current_time: float) -> bool:
        """
        –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å, —Å–ª–µ–¥—É–µ—Ç –ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—É—é –ø–æ–¥—Å–∫–∞–∑–∫—É.
        
        –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
            current_time (float): –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
            
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
            bool: True –µ—Å–ª–∏ —Å–ª–µ–¥—É–µ—Ç –ø–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É
        """
        # Show a tip every 10 moves or every 30 seconds
        return (self.move_counter % 10 == 0 and self.move_counter > 0) or \
               (current_time - self.last_tip_time > 30)
    
    def get_educational_feedback(self, move_count: int, current_time: float) -> Optional[str]:
        """
        –ü–æ–ª—É—á–∏—Ç—å –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—É—é –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –¥–ª—è –∏–≥—Ä–æ–∫–∞.
        
        –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
            move_count (int): –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–¥–µ–ª–∞–Ω–Ω—ã—Ö —Ö–æ–¥–æ–≤
            current_time (float): –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è
            
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
            str: –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –∏–ª–∏ None
        """
        self.move_counter = move_count
        
        if self.should_show_tip(current_time):
            self.last_tip_time = current_time
            
            # Alternate between different types of educational content
            tip_type = move_count % 5  # –î–æ–±–∞–≤–ª—è–µ–º –µ—â–µ –æ–¥–∏–Ω —Ç–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            
            if tip_type == 0:
                return f"üí° –°–æ–≤–µ—Ç: {self.get_random_tip()}"
            elif tip_type == 1:
                return f"üìö –§–∞–∫—Ç: {self.get_historical_fact()}"
            elif tip_type == 2:
                # Choose a random piece to explain
                piece = random.choice(list(PIECE_HINTS.keys()))
                return f"‚ôüÔ∏è {piece.capitalize()}: {self.get_piece_hint(piece)}"
            elif tip_type == 3:
                # Choose a random term to explain
                term = random.choice(list(CHESS_TERMS.keys()))
                return f"üìñ {term.capitalize()}: {self.get_term_explanation(term)}"
            else:
                # –î–µ–±—é—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                opening_suggestion = self.opening_book.get_opening_suggestion(move_count)
                if opening_suggestion:
                    opening_info = self.opening_book.get_opening_info(opening_suggestion)
                    if opening_info:
                        return f"üéØ –î–µ–±—é—Ç: {opening_suggestion} - {opening_info['description']}"
                # –ï—Å–ª–∏ –Ω–µ—Ç –¥–µ–±—é—Ç–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–Ω—Ü–∏–ø
                principle, explanation = self.opening_book.get_random_principle()
                return f"üéØ –ü—Ä–∏–Ω—Ü–∏–ø: {principle} {explanation}"
        
        return None