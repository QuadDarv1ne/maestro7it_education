# ============================================================================
# utils/opening_book.py
# ============================================================================

"""
Модуль: utils/opening_book.py

Описание:
    Содержит реализацию шахматной дебютной книги для образовательных целей.
    Предоставляет информацию о популярных дебютах, их названиях, характеристиках и образовательных пояснениях.
    
Возможности:
    - База популярных шахматных дебютов
    - Объяснения стратегических целей дебютов
    - Подсказки по развитию фигур в дебюте
    - Образовательные комментарии к ходам
    - Интерактивные уроки по дебютам
    - Прогресс изучения дебютов
"""

from typing import Dict, List, Optional, Tuple
import random

# Популярные шахматные дебюты с их ходами в формате UCI
OPENING_BOOK = {
    "Испанская партия": {
        "moves": ["e2e4", "e7e5", "g1f3", "b8c6", "f1b5"],
        "description": "Один из самых популярных дебютов. Белые сразу атакуют коня на c6.",
        "strategy": "Цель - быстрое развитие фигур и контроль центра. После Bb5+ можно получить выгоду в развитии.",
        "difficulty": "Средний",
        "educational_tips": [
            "Bb5 атакует коня на c6 и может выиграть темп",
            "После a6 и Ba4, слон контролирует диагональ g8-a2",
            "Размен на c6 дает белым пару слонов"
        ]
    },
    "Итальянская партия": {
        "moves": ["e2e4", "e7e5", "g1f3", "b8c6", "f1c4"],
        "description": "Классический дебют с быстрым развитием слона на c4.",
        "strategy": "Быстрое развитие фигур к центру. Слон на c4 прицеливается на слабую f7.",
        "difficulty": "Начальный",
        "educational_tips": [
            "Слон на c4 контролирует диагональ a2-g8",
            "f7 - самая слабая пешка у черных в начале игры",
            "d2-d4 может последовать для усиления центра"
        ]
    },
    "Сицилианская защита": {
        "moves": ["e2e4", "c7c5"],
        "description": "Самая популярная защита против e4. Немедленный ответ черных.",
        "strategy": "Асимметричная позиция с возможностью контратаки на флангах.",
        "difficulty": "Сложный",
        "educational_tips": [
            "c5 бросает вызов центральной пешке e4",
            "После d2-d4, cxd4 создает изолированную пешку d4",
            "Черные стремятся к контратаке на королевском фланге"
        ]
    },
    "Французская защита": {
        "moves": ["e2e4", "e7e6"],
        "description": "Солидная защита с пешкой на e6.",
        "strategy": "Подготовка к продвижению d7-d5. Часто приводит к плотным позициям.",
        "difficulty": "Средний",
        "educational_tips": [
            "e6 готовит d7-d5 для борьбы за центр",
            "Слон c8 временно заблокирован, но может выйти на b7 или a3",
            "f7-f6 может последовать для освобождения слона"
        ]
    },
    "Каро-Каннская защита": {
        "moves": ["e2e4", "c7c6"],
        "description": "Надежная защита с пешкой на c6.",
        "strategy": "Подготовка к d7-d5. Характеризуется прочным центральным пешечным устройством.",
        "difficulty": "Средний",
        "educational_tips": [
            "c6 готовит d7-d5 для борьбы за центр",
            "После d2-d4 и d5, cxd5 дает прочный центр белым",
            "Черные стремятся к быстрому развитию и контратаке"
        ]
    },
    "Скандинавская защита": {
        "moves": ["e2e4", "d7d5"],
        "description": "Прямолинейная защита с немедленным обменом пешек.",
        "strategy": "Быстрое развитие и борьба за центр. Требует точного знания продолжений.",
        "difficulty": "Средний",
        "educational_tips": [
            "d5 сразу бросает вызов e4",
            "После exd5, Qxd5 дает быстрое развитие ферзя",
            "Белые стремятся к быстрому развитию и атаке на короля"
        ]
    },
    "Дебют английского": {
        "moves": ["c2c4"],
        "description": "Гибкий дебют, не начинающийся с e4 или d4.",
        "strategy": "Контроль центра косвенно. Позволяет выбрать из множества продолжений.",
        "difficulty": "Средний",
        "educational_tips": [
            "c4 контролирует d5 и b5",
            "Гибкий дебют, позволяющий адаптироваться к ответу черных",
            "Может трансформироваться в различные структуры"
        ]
    },
    "Королевский дебют": {
        "moves": ["e2e4", "e7e5", "d2d4"],
        "description": "Агрессивный дебют с немедленным захватом центра.",
        "strategy": "Быстрое развитие и атака. Требует точного знания теории.",
        "difficulty": "Сложный",
        "educational_tips": [
            "d4 немедленно бросает вызов e5",
            "exd4 создает открытую позицию с быстрым развитием",
            "Белые стремятся к быстрой атаке на короля черных"
        ]
    },
    "Гамбит Дамы": {
        "moves": ["d2d4", "d7d5", "c2c4", "d5c4"],
        "description": "Пожертвование пешки ради быстрого развития.",
        "strategy": "Быстрое развитие фигур за счет материала. Требует точного восстановления пешки.",
        "difficulty": "Сложный",
        "educational_tips": [
            "c4 жертвует пешку для быстрого развития",
            "Белые получают быстрое развитие и инициативу",
            "Важно быстро восстановить пешку и не отставать в развитии"
        ]
    },
    "Славянская защита": {
        "moves": ["d2d4", "d7d5", "c2c4", "c7c6"],
        "description": "Надежная защита против d4.",
        "strategy": "Прочная пешечная структура. Часто ведет к позиционной борьбе.",
        "difficulty": "Средний",
        "educational_tips": [
            "c6 готовит d5-d4 для борьбы за центр",
            "После Nf3 и Nc3, позиция становится прочной",
            "Черные стремятся к позиционной борьбе без риска"
        ]
    },
    "Индийская защита": {
        "moves": ["d2d4", "g8f6"],
        "description": "Гипермодерный подход - развитие коня перед пешками.",
        "strategy": "Контроль центра издалека. Подготовка к пешечным продвижениям.",
        "difficulty": "Сложный",
        "educational_tips": [
            "Nf6 контролирует e4 и g5",
            "Гипермодерный подход - контроль центра издалека",
            "Готовит пешечные продвижения c7-c5 или e7-e5"
        ]
    },
    "Рети": {
        "moves": ["g1f3", "d2d4"],
        "description": "Гибридный дебют с конем на f3.",
        "strategy": "Быстрое развитие коня и подготовка к центральному захвату.",
        "difficulty": "Средний",
        "educational_tips": [
            "Nf3 готовит d2-d4 и контролирует e5",
            "Гибкий дебют, позволяющий адаптироваться к ответу черных",
            "Может трансформироваться в различные структуры"
        ]
    },
    "Скандинавская защита": {
        "moves": ["e2e4", "d7d5"],
        "description": "Прямолинейная защита с немедленным обменом пешек.",
        "strategy": "Быстрое развитие и борьба за центр. Требует точного знания продолжений.",
        "difficulty": "Средний",
        "educational_tips": [
            "d5 сразу бросает вызов e4",
            "После exd5, Qxd5 дает быстрое развитие ферзя",
            "Белые стремятся к быстрому развитию и атаке на короля"
        ]
    },
    "Сицилианская защита (вариант Найдорф)": {
        "moves": ["e2e4", "c7c5", "g1f3", "d7d6", "d2d4", "c5d4", "f3d4", "g8f6", "b1c3", "a7a6"],
        "description": "Один из самых популярных вариантов Сицилианской защиты.",
        "strategy": "Агрессивная контратака черных на королевском фланге.",
        "difficulty": "Сложный",
        "educational_tips": [
            "a6 готовит b7-b5 для развития слона",
            "Черные стремятся к атаке на королевском фланге",
            "Bg7 и 0-0 следуют для быстрого развития"
        ]
    },
    "Испанская партия (вариант Берлина)": {
        "moves": ["e2e4", "e7e5", "g1f3", "b8c6", "f1b5", "g8f6", "e1g1", "f6e4"],
        "description": "Современный вариант Испанской партии, популярный у гроссмейстеров.",
        "strategy": "Быстрое развитие и борьба за центр. Часто ведет к эндшпилю.",
        "difficulty": "Сложный",
        "educational_tips": [
            "0-0-0 позволяет развить ладью на f1",
            "Nxe4 жертвует коня для быстрого развития",
            "Белые стремятся к быстрому развитию и атаке"
        ]
    }
}

# Образовательные комментарии к отдельным ходам
MOVE_COMMENTS = {
    "e2e4": "Классическое начало игры. Открывает диагонали для слона и ферзя.",
    "e7e5": "Симметричный ответ. Борьба за центр.",
    "g1f3": "Развитие коня к центру. Готовит к рокировке.",
    "b8c6": "Развитие коня с защитой e5. Классическое продолжение.",
    "f1b5": "Атака коня на c6. Испанская партия.",
    "f1c4": "Развитие слона к центру. Итальянская партия.",
    "c7c5": "Сицилианская защита. Немедленный вызов центра.",
    "e7e6": "Французская защита. Подготовка к d5.",
    "c7c6": "Каро-Каннская защита. Прочная пешечная структура.",
    "d7d5": "Скандинавская защита. Прямая борьба в центре.",
    "c2c4": "Английский дебют. Косвенное влияние на центр.",
    "d2d4": "Королевский дебют. Прямой захват центра.",
    "d5c4": "Принятие гамбита Дамы. Получение пешки.",
    "g8f6": "Индийская защита. Развитие коня перед пешками.",
    "b1c3": "Развитие коня к центру. Контроль e4 и d5.",
    "d7d6": "Подготовка к рокировке. Укрепление e5.",
    "a7a6": "Подготовка к развитию слона. Контроль b5.",
    "e1g1": "Короткая рокировка. Безопасность короля.",
    "e8g8": "Короткая рокировка черных. Безопасность короля."
}

# Стратегические принципы дебютов
OPENING_PRINCIPLES = [
    "Развивайте фигуры как можно быстрее.",
    "Контролируйте центр доски.",
    "Не двигайте одну и ту же фигуру дважды в дебюте.",
    "Рокируйтесь как можно скорее.",
    "Сведите к минимуму количество пешечных ходов в дебюте.",
    "Не выводите ферзя слишком рано.",
    "Постарайтесь не создавать слабых пешек.",
    "Планируйте свои ходы заранее."
]

# Образовательные объяснения к дебютным принципам
PRINCIPLE_EXPLANATIONS = {
    "Развивайте фигуры как можно быстрее.": "Фигуры на начальных позициях бесполезны. Развивайте их к центру для максимальной активности.",
    "Контролируйте центр доски.": "Центральные клетки (e4, e5, d4, d5) контролируют большую часть доски. Контроль центра дает пространство и инициативу.",
    "Не двигайте одну и ту же фигуру дважды в дебюте.": "Это теряет время. В дебюте время очень ценно.",
    "Рокируйтесь как можно скорее.": "Безопасность короля первостепенна. Рокировка также соединяет ладьи.",
    "Сведите к минимуму количество пешечных ходов в дебюте.": "Пешки двигаются один раз и не могут отступить. Фигуры более гибкие.",
    "Не выводите ферзя слишком рано.": "Ферзь будет атакован менее ценными фигурами, теряя время.",
    "Постарайтесь не создавать слабых пешек.": "Изолированные, сдвоенные и отсталые пешки становятся мишенями.",
    "Планируйте свои ходы заранее.": "Каждый ход должен служить общей стратегической идее."
}

# Интерактивные уроки по дебютам
OPENING_LESSONS = {
    "Испанская партия": {
        "title": "Испанская партия - Урок 1",
        "content": "В Испанской партии белые сразу атакуют коня на c6 слоном с b5. Это создает напряжение в позиции и позволяет получить выгоду в развитии.",
        "key_moves": ["e2e4", "e7e5", "g1f3", "b8c6", "f1b5"],
        "practice_position": "r1bqkbnr/pppp1ppp/2n5/1B2p3/4P3/5N2/PPPP1PPP/RNBQK2R b KQkq - 0 1",
        "objectives": [
            "Развить фигуры к центру",
            "Контролировать e5",
            "Подготовиться к рокировке"
        ]
    },
    "Сицилианская защита": {
        "title": "Сицилианская защита - Урок 1",
        "content": "Сицилианская защита - самая популярная защита против e4. Черные немедленно бросают вызов центральной пешке e4 пешкой c7-c5.",
        "key_moves": ["e2e4", "c7c5"],
        "practice_position": "rnbqkbnr/pp1ppppp/8/2p5/4P3/8/PPPP1PPP/RNBQKBNR w KQkq - 0 1",
        "objectives": [
            "Контролировать d4",
            "Подготовиться к контратаке",
            "Развить фигуры активно"
        ]
    }
}

class OpeningBook:
    """
    Класс для работы с дебютной книгой и предоставления образовательной информации о дебютах.
    """
    
    def __init__(self):
        self.opening_stats = {}  # Статистика использования дебютов
        self.move_sequence = []  # Последовательность сделанных ходов
        self.learned_openings = set()  # Изученные дебюты
        
    def get_opening_name(self, move_sequence: List[str]) -> Optional[str]:
        """
        Определить название дебюта по последовательности ходов.
        
        Параметры:
            move_sequence (List[str]): Последовательность ходов в формате UCI
            
        Возвращает:
            str: Название дебюта или None если не найден
        """
        # Проверяем последовательность ходов против известных дебютов
        for name, opening in OPENING_BOOK.items():
            opening_moves = opening["moves"]
            # Проверяем, совпадает ли начало последовательности с ходами дебюта
            if len(move_sequence) >= len(opening_moves):
                match = True
                for i, move in enumerate(opening_moves):
                    if i >= len(move_sequence) or move_sequence[i] != move:
                        match = False
                        break
                if match:
                    return name
        return None
    
    def get_opening_info(self, opening_name: str) -> Optional[Dict]:
        """
        Получить информацию о дебюте по названию.
        
        Параметры:
            opening_name (str): Название дебюта
            
        Возвращает:
            Dict: Информация о дебюте или None если не найден
        """
        return OPENING_BOOK.get(opening_name)
    
    def get_move_comment(self, move: str) -> Optional[str]:
        """
        Получить комментарий к ходу.
        
        Параметры:
            move (str): Ход в формате UCI
            
        Возвращает:
            str: Комментарий к ходу или None если не найден
        """
        return MOVE_COMMENTS.get(move)
    
    def get_random_principle(self) -> Tuple[str, str]:
        """
        Получить случайный дебютный принцип и его объяснение.
        
        Возвращает:
            Tuple[str, str]: Принцип и его объяснение
        """
        principle = random.choice(OPENING_PRINCIPLES)
        explanation = PRINCIPLE_EXPLANATIONS.get(principle, "")
        return principle, explanation
    
    def get_opening_suggestion(self, move_count: int) -> Optional[str]:
        """
        Получить предложение по дебюту для изучения.
        
        Параметры:
            move_count (int): Количество сделанных ходов
            
        Возвращает:
            str: Предложение по дебюту или None
        """
        # Предлагаем дебюты в зависимости от стадии игры
        if move_count < 10:
            # Предлагаем популярные дебюты
            easy_openings = [name for name, info in OPENING_BOOK.items() if info["difficulty"] == "Начальный"]
            return random.choice(easy_openings) if easy_openings else None
        elif move_count < 20:
            # Предлагаем средние по сложности дебюты
            medium_openings = [name for name, info in OPENING_BOOK.items() if info["difficulty"] == "Средний"]
            return random.choice(medium_openings) if medium_openings else None
        else:
            # Предлагаем сложные дебюты
            hard_openings = [name for name, info in OPENING_BOOK.items() if info["difficulty"] == "Сложный"]
            return random.choice(hard_openings) if hard_openings else None
    
    def add_move(self, move: str):
        """
        Добавить ход в последовательность.
        
        Параметры:
            move (str): Ход в формате UCI
        """
        self.move_sequence.append(move)
    
    def reset_sequence(self):
        """Сбросить последовательность ходов."""
        self.move_sequence = []
    
    def get_current_opening(self) -> Optional[Tuple[str, Dict]]:
        """
        Получить текущий дебют на основе сделанных ходов.
        
        Возвращает:
            Tuple[str, Dict]: Название дебюта и информация о нем или None
        """
        opening_name = self.get_opening_name(self.move_sequence)
        if opening_name:
            opening_info = self.get_opening_info(opening_name)
            if opening_info:
                return opening_name, opening_info
        return None
    
    def get_educational_tip(self, opening_name: str) -> Optional[str]:
        """
        Получить образовательный совет по дебюту.
        
        Параметры:
            opening_name (str): Название дебюта
            
        Возвращает:
            str: Образовательный совет или None
        """
        opening_info = self.get_opening_info(opening_name)
        if opening_info and "educational_tips" in opening_info:
            return random.choice(opening_info["educational_tips"])
        return None
    
    def get_opening_lesson(self, opening_name: str) -> Optional[Dict]:
        """
        Получить интерактивный урок по дебюту.
        
        Параметры:
            opening_name (str): Название дебюта
            
        Возвращает:
            Dict: Урок по дебюту или None
        """
        return OPENING_LESSONS.get(opening_name)
    
    def mark_opening_learned(self, opening_name: str):
        """
        Пометить дебют как изученный.
        
        Параметры:
            opening_name (str): Название дебюта
        """
        self.learned_openings.add(opening_name)
    
    def get_learned_openings(self) -> List[str]:
        """
        Получить список изученных дебютов.
        
        Возвращает:
            List[str]: Список изученных дебютов
        """
        return list(self.learned_openings)