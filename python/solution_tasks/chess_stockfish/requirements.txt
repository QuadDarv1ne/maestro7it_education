# ===================================================================
# ПОЛНОЦЕННЫЙ REQUIREMENTS.TXT ДЛЯ HIGH-PERFORMANCE DEVELOPMENT
# Python 3.10+ | NVIDIA RTX GPU | CPU Intel/AMD
# ===================================================================

# === БАЗОВЫЕ НАУЧНЫЕ БИБЛИОТЕКИ ===
numpy
scipy
pandas
polars
pyarrow

# === CPU ОПТИМИЗАЦИЯ ===
numba
cython
joblib
dask[complete]
pythran

# === GPU NVIDIA (CUDA 12.x) ===
cupy-cuda12x
torch
torchvision
torchaudio
tensorflow[and-cuda]
jax[cuda12_pip]
onnxruntime-gpu
accelerate
lightning
taichi

# === OPENCL (AMD/NVIDIA/INTEL) ===
pyopencl

# === КОМПЬЮТЕРНОЕ ЗРЕНИЕ ===
opencv-python
pillow
pillow-simd
imageio
scikit-image
albumentations

# === MACHINE LEARNING ===
scikit-learn
xgboost
lightgbm
transformers
optuna
stable-baselines3

# === ИГРЫ И ГРАФИКА ===
pygame
pygame-ce
pyglet
arcade
moderngl
moderngl-window
pyopengl
dearpygui
panda3d
ursina
vispy
glfw

# === ФИЗИКА ===
pymunk
pybullet

# === ШАХМАТЫ ===
python-chess
stockfish
chess-com

# === REINFORCEMENT LEARNING ===
gymnasium

# === МНОГОПОТОЧНОСТЬ И ПАРАЛЛЕЛИЗМ ===
multiprocess
concurrent-log-handler
ray[default]
ipyparallel

# === РАБОТА С БОЛЬШИМИ ДАННЫМИ ===
vaex-core
vaex-viz
fastparquet
h5py

# === МАТЕМАТИКА И СТАТИСТИКА ===
sympy
mpmath
statsmodels
networkx

# === ВИЗУАЛИЗАЦИЯ ===
matplotlib
plotly
pyqtgraph
tensorboard
seaborn

# === МУЛЬТИМЕДИА ===
pyaudio
sounddevice
moviepy

# === EXPERIMENT TRACKING & MLOPS ===
wandb
mlflow

# === ПРОФИЛИРОВАНИЕ И МОНИТОРИНГ ===
line-profiler
memory-profiler
py-spy
nvitop
gpustat
pynvml

# === РАЗРАБОТКА И ТЕСТИРОВАНИЕ ===
pytest
pytest-benchmark
pytest-xdist
hypothesis
icecream

# === КАЧЕСТВО КОДА ===
mypy
ruff
black
isort

# === УТИЛИТЫ ===
tqdm
rich
loguru
requests
aiohttp

# ===================================================================
# ИНСТРУКЦИИ ПО УСТАНОВКЕ:
# 
# 1. Убедитесь, что установлены:
#    - NVIDIA CUDA Toolkit 12.x
#    - NVIDIA cuDNN 8.x
#    - Драйверы NVIDIA (последняя версия)
#
# 2. Создайте виртуальное окружение:
#    python -m venv venv
#    source venv/bin/activate  # Linux/Mac
#    venv\Scripts\activate     # Windows
#
# 3. Обновите pip:
#    pip install --upgrade pip setuptools wheel
#
# 4. Установите зависимости:
#    pip install -r requirements.txt
#
# 5. Проверьте GPU:
#    python -c "import torch; print(torch.cuda.is_available())"
#    python -c "import cupy; print(cupy.cuda.runtime.getDeviceCount())"
#
# РАЗМЕР: ~15-20 GB с зависимостями
# ВРЕМЯ УСТАНОВКИ: 20-40 минут (зависит от интернета)
# ===================================================================