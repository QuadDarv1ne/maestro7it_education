#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∏–∑—É–∞–ª—å–Ω—ã—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤ –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Ñ–∏–≥—É—Ä—ã.
–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –±—ã–ª–∏ —É—Å—Ç—Ä–∞–Ω–µ–Ω—ã.
"""

import pygame
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º –∏–≥—Ä—ã
sys.path.append(os.path.join(os.path.dirname(__file__), '..'))

from game.chess_game import ChessGame
from ui.board_renderer import BoardRenderer

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏."""
    pygame.init()
    
    try:
        print("üé® –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∏–∑—É–∞–ª—å–Ω—ã—Ö –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤")
        print("–ü–æ–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Ñ–∏–≥—É—Ä—ã —É—Å—Ç—Ä–∞–Ω–µ–Ω—ã")
        
        # –°–æ–∑–¥–∞–µ–º –æ–∫–Ω–æ
        screen = pygame.display.set_mode((512, 612))
        pygame.display.set_caption("–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤")
        
        # –°–æ–∑–¥–∞–µ–º —Ä–µ–Ω–¥–µ—Ä–µ—Ä
        renderer = BoardRenderer(screen, 'white')
        
        # –¢–µ—Å—Ç–æ–≤–∞—è –ø–æ–∑–∏—Ü–∏—è —Å —Ñ–∏–≥—É—Ä–∞–º–∏
        test_board = [
            ['r', 'n', 'b', 'q', 'k', 'b', 'n', 'r'],
            ['p', 'p', 'p', 'p', 'p', 'p', 'p', 'p'],
            [None] * 8,
            [None] * 8,
            [None] * 8,
            [None] * 8,
            ['P', 'P', 'P', 'P', 'P', 'P', 'P', 'P'],
            ['R', 'N', 'B', 'Q', 'K', 'B', 'N', 'R']
        ]
        
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        clock = pygame.time.Clock()
        running = True
        step = 0
        steps = [
            "1. –ë–∞–∑–æ–≤–∞—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –¥–æ—Å–∫–∏",
            "2. –í—ã–±–æ—Ä –±–µ–ª–æ–π –ø–µ—à–∫–∏ (e2)",
            "3. –ü–æ–∫–∞–∑ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ö–æ–¥–æ–≤",
            "4. –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –ø–µ—à–∫–∏ –Ω–∞ e4",
            "5. –í—ã–±–æ—Ä —á–µ—Ä–Ω–æ–π –ø–µ—à–∫–∏ (e7)",
            "6. –ü–æ–∫–∞–∑ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ö–æ–¥–æ–≤",
            "7. –û—Ç–º–µ–Ω–∞ –≤—ã–±–æ—Ä–∞",
            "8. –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ - –Ω–µ—Ç –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤!"
        ]
        
        while running:
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    running = False
                elif event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_ESCAPE:
                        running = False
            
            # –û—á–∏—â–∞–µ–º —ç–∫—Ä–∞–Ω
            screen.fill((40, 40, 40))
            
            # –í –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —à–∞–≥–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–∞–∑–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            if step == 0:
                # –ë–∞–∑–æ–≤–∞—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∞
                renderer._mark_all_dirty()
                renderer.draw(test_board, evaluation=0.0, thinking=False)
            elif step == 1:
                # –í—ã–±–æ—Ä –±–µ–ª–æ–π –ø–µ—à–∫–∏
                renderer.set_selected((6, 4))  # e2
                renderer._mark_all_dirty()
                renderer.draw(test_board, evaluation=0.0, thinking=False)
            elif step == 2:
                # –ü–æ–∫–∞–∑ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ö–æ–¥–æ–≤
                renderer.set_move_hints([(5, 4), (4, 4)])  # e3, e4
                renderer._mark_all_dirty()
                renderer.draw(test_board, evaluation=0.0, thinking=False)
            elif step == 3:
                # –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ –ø–µ—à–∫–∏
                renderer.set_last_move((6, 4), (4, 4))  # e2 -> e4
                renderer.set_selected(None)
                renderer.set_move_hints([])
                # –û–±–Ω–æ–≤–ª—è–µ–º –¥–æ—Å–∫—É (–ø–µ—à–∫–∞ –ø–µ—Ä–µ–º–µ—Å—Ç–∏–ª–∞—Å—å)
                demo_board = [row[:] for row in test_board]
                demo_board[6][4] = None  # –£–±–∏—Ä–∞–µ–º –ø–µ—à–∫—É —Å e2
                demo_board[4][4] = 'P'   # –°—Ç–∞–≤–∏–º –ø–µ—à–∫—É –Ω–∞ e4
                renderer._mark_all_dirty()
                renderer.draw(demo_board, evaluation=0.1, thinking=False)
            elif step == 4:
                # –í—ã–±–æ—Ä —á–µ—Ä–Ω–æ–π –ø–µ—à–∫–∏
                renderer.set_selected((1, 4))  # e7
                renderer._mark_all_dirty()
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –¥–æ—Å–∫—É
                demo_board = [row[:] for row in test_board]
                demo_board[6][4] = None
                demo_board[4][4] = 'P'
                renderer.draw(demo_board, evaluation=0.1, thinking=False)
            elif step == 5:
                # –ü–æ–∫–∞–∑ –≤–æ–∑–º–æ–∂–Ω—ã—Ö —Ö–æ–¥–æ–≤ —á–µ—Ä–Ω–æ–π –ø–µ—à–∫–∏
                renderer.set_move_hints([(2, 4), (3, 4)])  # e6, e5
                renderer._mark_all_dirty()
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –¥–æ—Å–∫—É
                demo_board = [row[:] for row in test_board]
                demo_board[6][4] = None
                demo_board[4][4] = 'P'
                renderer.draw(demo_board, evaluation=0.1, thinking=False)
            elif step == 6:
                # –û—Ç–º–µ–Ω–∞ –≤—ã–±–æ—Ä–∞
                renderer.set_selected(None)
                renderer.set_move_hints([])
                renderer._mark_all_dirty()
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –¥–æ—Å–∫—É
                demo_board = [row[:] for row in test_board]
                demo_board[6][4] = None
                demo_board[4][4] = 'P'
                renderer.draw(demo_board, evaluation=0.0, thinking=False)
            elif step >= 7:
                # –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ
                renderer._mark_all_dirty()
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –¥–æ—Å–∫—É
                demo_board = [row[:] for row in test_board]
                demo_board[6][4] = None
                demo_board[4][4] = 'P'
                renderer.draw(demo_board, evaluation=0.0, thinking=False)
            
            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–µ–∫—É—â–∏–π —à–∞–≥
            font = pygame.font.SysFont('Arial', 16)
            step_text = font.render(steps[min(step, len(steps)-1)], True, (255, 255, 255))
            screen.blit(step_text, (10, 520))
            
            # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
            if step < len(steps) - 1:
                instruction = font.render("–ù–∞–∂–º–∏—Ç–µ SPACE –¥–ª—è —Å–ª–µ–¥—É—é—â–µ–≥–æ —à–∞–≥–∞ –∏–ª–∏ ESC –¥–ª—è –≤—ã—Ö–æ–¥–∞", True, (200, 200, 200))
            else:
                instruction = font.render("–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –ù–∞–∂–º–∏—Ç–µ ESC –¥–ª—è –≤—ã—Ö–æ–¥–∞", True, (100, 255, 100))
            screen.blit(instruction, (10, 550))
            
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –∫–ª–∞–≤–∏—à –¥–ª—è –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –ø–æ —à–∞–≥–∞–º
            keys = pygame.key.get_pressed()
            if keys[pygame.K_SPACE] and step < len(steps) - 1:
                step += 1
                pygame.time.wait(200)  # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —Å–ª–∏—à–∫–æ–º –±—ã—Å—Ç—Ä–æ–≥–æ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è
            
            pygame.display.flip()
            clock.tick(30)
        
        # –û—á–∏—â–∞–µ–º —Ä–µ—Å—É—Ä—Å—ã
        renderer.cleanup()
        pygame.quit()
        
        print("\n‚úÖ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("‚úÖ –ê—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ —Ñ–∏–≥—É—Ä—ã —É—Å—Ç—Ä–∞–Ω–µ–Ω—ã")
        print("‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∏ –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ —ç–∫—Ä–∞–Ω–∞")
        print("‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–æ—Å–∫–∏")
        
    except Exception as e:
        pygame.quit()
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –≤ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
        import traceback
        traceback.print_exc()
        sys.exit(1)

if __name__ == "__main__":
    main()