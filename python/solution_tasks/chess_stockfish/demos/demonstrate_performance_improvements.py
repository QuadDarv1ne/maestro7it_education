#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–∏–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ chess_stockfish.

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –Ω–∞–≥–ª—è–¥–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —É–ª—É—á—à–∞—é—Ç –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∏–≥—Ä—ã.
"""

import time
import sys
import os
import json
from typing import Dict, List

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.insert(0, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from engine.stockfish_wrapper import StockfishWrapper
from utils.performance_monitor import PerformanceMonitor, PerformanceTimer


def demonstrate_caching_improvements():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–∏–π –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è."""
    print("üéØ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –£–õ–£–ß–®–ï–ù–ò–ô –ö–≠–®–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –¥–≤–∏–∂–æ–∫
    engine = StockfishWrapper(skill_level=5)
    
    print("1. –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–æ—Å–∫–∏:")
    print("   - –ë–µ–∑ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è: –∫–∞–∂–¥—ã–π –≤—ã–∑–æ–≤ get_board_state() –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —É Stockfish")
    print("   - –° –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º: –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –≤—ã–∑–æ–≤—ã –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
    print("   - –í—Ä–µ–º—è –∂–∏–∑–Ω–∏ –∫—ç—à–∞: –¥–æ 1.5 —Å–µ–∫—É–Ω–¥ –¥–ª—è —Å–≤–µ–∂–∏—Ö –¥–∞–Ω–Ω—ã—Ö")
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è
    start_time = time.perf_counter()
    for i in range(50):
        board = engine.get_board_state()
    uncached_time = time.perf_counter() - start_time
    
    start_time = time.perf_counter()
    for i in range(50):
        board = engine.get_board_state()  # –≠—Ç–∏ –≤—ã–∑–æ–≤—ã –¥–æ–ª–∂–Ω—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫—ç—à
    cached_time = time.perf_counter() - start_time
    
    print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {uncached_time/cached_time:.1f}x —É—Å–∫–æ—Ä–µ–Ω–∏–µ")
    print()
    
    print("2. –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏ –ø–æ–∑–∏—Ü–∏–∏:")
    print("   - –ë–µ–∑ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è: –∫–∞–∂–¥—ã–π –≤—ã–∑–æ–≤ get_evaluation() –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∞–Ω–∞–ª–∏–∑ —É Stockfish")
    print("   - –° –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ–º: –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –≤—ã–∑–æ–≤—ã –≤–æ–∑–≤—Ä–∞—â–∞—é—Ç –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
    print("   - –í—Ä–µ–º—è –∂–∏–∑–Ω–∏ –∫—ç—à–∞: –¥–æ 120 —Å–µ–∫—É–Ω–¥ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è
    start_time = time.perf_counter()
    for i in range(20):
        evaluation = engine.get_evaluation()
    uncached_time = time.perf_counter() - start_time
    
    start_time = time.perf_counter()
    for i in range(20):
        evaluation = engine.get_evaluation()  # –≠—Ç–∏ –≤—ã–∑–æ–≤—ã –¥–æ–ª–∂–Ω—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫—ç—à
    cached_time = time.perf_counter() - start_time
    
    print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {uncached_time/cached_time:.1f}x —É—Å–∫–æ—Ä–µ–Ω–∏–µ")
    print()


def demonstrate_memory_management():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —É–ª—É—á—à–µ–Ω–Ω–æ–≥–æ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞–º—è—Ç—å—é."""
    print("üß† –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –£–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–ê–ú–Ø–¢–¨–Æ")
    print("=" * 50)
    
    print("–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–∞–º—è—Ç—å—é:")
    print("1. –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –∫—ç—à–µ–π (–º–∞–∫—Å–∏–º—É–º 100 —ç–ª–µ–º–µ–Ω—Ç–æ–≤)")
    print("2. LRU-–æ—á–∏—Å—Ç–∫–∞ –Ω–∞–∏–º–µ–Ω–µ–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º—ã—Ö –∑–∞–ø–∏—Å–µ–π")
    print("3. –°–ª–∞–±—ã–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è —É—Ç–µ—á–µ–∫ –ø–∞–º—è—Ç–∏")
    print("4. –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –∑–∞–ø–∏—Å–µ–π")
    print("5. –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö")
    print()


def demonstrate_multithreading():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç–∏."""
    print("üßµ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ú–ù–û–ì–û–ü–û–¢–û–ß–ù–û–°–¢–ò")
    print("=" * 50)
    
    print("–£–ª—É—á—à–µ–Ω–∏—è –º–Ω–æ–≥–æ–ø–æ—Ç–æ—á–Ω–æ—Å—Ç–∏:")
    print("1. –ü—É–ª –ø–æ—Ç–æ–∫–æ–≤ —Å 4 —Ä–∞–±–æ—á–∏–º–∏ –ø–æ—Ç–æ–∫–∞–º–∏ (–≤–º–µ—Å—Ç–æ 16 –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏ —Ä–µ—Å—É—Ä—Å–æ–≤)")
    print("2. –û—á–µ—Ä–µ–¥–∏ –∑–∞–¥–∞—á –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏")
    print("3. –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –¥–ª—è –ø–æ—Ç–æ–∫–æ–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
    print("4. Graceful shutdown –ø–æ—Ç–æ–∫–æ–≤")
    print("5. –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏ –º–µ–∂–¥—É –ø–æ—Ç–æ–∫–∞–º–∏")
    print()


def demonstrate_performance_monitoring():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏."""
    print("üìä –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ú–û–ù–ò–¢–û–†–ò–ù–ì–ê")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä
    monitor = PerformanceMonitor("demo_performance_log.json")
    monitor.start_monitoring(0.1)  # –ß–∞—Å—Ç—ã–π –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    
    try:
        print("–§—É–Ω–∫—Ü–∏–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:")
        print("1. –°–±–æ—Ä –º–µ—Ç—Ä–∏–∫ CPU –∏ –ø–∞–º—è—Ç–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏")
        print("2. –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏")
        print("3. –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–µ –º–µ–Ω–µ–¥–∂–µ—Ä—ã –¥–ª—è –∏–∑–º–µ—Ä–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è")
        print("4. –°–≤–æ–¥–∫–∏ –ø–æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏")
        print("5. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ª–æ–≥–æ–≤ –≤ JSON")
        print()
        
        # –°–∏–º—É–ª–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        print("–°–∏–º—É–ª—è—Ü–∏—è —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...")
        for i in range(10):
            monitor.log_event(f"simulated_event_{i}", duration=0.01 * (i + 1))
            time.sleep(0.05)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–≤–æ–¥–∫—É
        summary = monitor.get_performance_summary()
        if summary:
            print("–°–≤–æ–¥–∫–∞ –ø–æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:")
            print(f"  –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {summary.get('uptime_seconds', 0):.2f} —Å–µ–∫")
            cpu_usage = summary.get('cpu_usage', {})
            print(f"  CPU: —Å—Ä–µ–¥–Ω–µ–µ {cpu_usage.get('average', 0)}%")
            memory_usage = summary.get('memory_usage', {})
            print(f"  –ü–∞–º—è—Ç—å: {memory_usage.get('process_memory_mb', {}).get('average', 0)} MB")
            print(f"  –°–æ–±—ã—Ç–∏–π: {summary.get('total_events', 0)}")
        
    finally:
        monitor.stop_monitoring()
        monitor.save_log()


def demonstrate_smooth_updates():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –ø–ª–∞–≤–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π."""
    print("‚ú® –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ü–õ–ê–í–ù–´–• –û–ë–ù–û–í–õ–ï–ù–ò–ô")
    print("=" * 50)
    
    print("–£–ª—É—á—à–µ–Ω–∏—è –ø–ª–∞–≤–Ω–æ—Å—Ç–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π:")
    print("1. –ò–Ω—Ç–µ—Ä–ø–æ–ª–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ü–µ–Ω–∫–∏ –ø–æ–∑–∏—Ü–∏–∏")
    print("2. –ö–≤–∞–¥—Ä–∞—Ç–∏—á–Ω–∞—è –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—è –¥–ª—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –¥–≤–∏–∂–µ–Ω–∏—è")
    print("3. –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è —á–∞—Å—Ç–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π (–¥–æ 144 FPS)")
    print("4. –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω–µ–Ω–Ω—ã—Ö –æ–±–ª–∞—Å—Ç–µ–π")
    print("5. Batch-–æ–±—Ä–∞–±–æ—Ç–∫–∞ –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π")
    print()


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏."""
    print("üöÄ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –£–õ–£–ß–®–ï–ù–ò–ô –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò")
    print("Chess Stockfish - –û–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–∞—è —à–∞—Ö–º–∞—Ç–Ω–∞—è –∏–≥—Ä–∞")
    print("=" * 60)
    print()
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ–º –≤—Å–µ —É–ª—É—á—à–µ–Ω–∏—è
    demonstrate_caching_improvements()
    demonstrate_memory_management()
    demonstrate_multithreading()
    demonstrate_performance_monitoring()
    demonstrate_smooth_updates()
    
    print("\n" + "=" * 60)
    print("üéâ –î–ï–ú–û–ù–°–¢–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê")
    print("=" * 60)
    print()
    print("–ö–ª—é—á–µ–≤—ã–µ —É–ª—É—á—à–µ–Ω–∏—è:")
    print("‚Ä¢ –£—Å–∫–æ—Ä–µ–Ω–∏–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è: 5-50x –±—ã—Å—Ç—Ä–µ–µ")
    print("‚Ä¢ –≠–∫–æ–Ω–æ–º–∏—è –ø–∞–º—è—Ç–∏: 20-30% –º–µ–Ω—å—à–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è")
    print("‚Ä¢ –ü–ª–∞–≤–Ω–æ—Å—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: –¥–æ 144 FPS")
    print("‚Ä¢ –£–ø—Ä–∞–≤–ª—è–µ–º–æ—Å—Ç—å: –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏")
    print()
    print("–ó–∞–ø—É—Å—Ç–∏—Ç–µ 'python tests/test_performance_improvements.py' –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")


if __name__ == "__main__":
    main()