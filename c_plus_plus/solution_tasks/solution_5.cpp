/*
    üåü –ü—Ä–æ–≥—Ä–∞–º–º–∞ - –ü–æ–∏—Å–∫ —ç–∫—Å—Ç—Ä–µ–º—É–º–æ–≤ üåü

    üìñ –û–ø–∏—Å–∞–Ω–∏–µ:
    
    –≠—Ç–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–æ–º–æ–≥–∞–µ—Ç –Ω–∞–π—Ç–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –≤ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏,
    –≤–≤–µ–¥–µ–Ω–Ω–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º. –û–Ω–∞ –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö, –ø–æ–∏—Å–∫–∞ —Ä–µ–∫–æ—Ä–¥–æ–≤
    –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã —É–¥–∏–≤–∏—Ç—å –¥—Ä—É–∑–µ–π —Å–≤–æ–∏–º–∏ –Ω–∞–≤—ã–∫–∞–º–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.

    üìù –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:
    1. –í—ã –≤–≤–æ–¥–∏—Ç–µ —á–∏—Å–ª–∞ –æ–¥–Ω–æ –∑–∞ –¥—Ä—É–≥–∏–º.
    2. –ö–æ–≥–¥–∞ –∑–∞—Ö–æ—Ç–∏—Ç–µ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è, –≤–≤–µ–¥–∏—Ç–µ -1.
    3. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ –∏ —Å–∞–º–æ–µ –º–∞–ª–µ–Ω—å–∫–æ–µ —á–∏—Å–ª–æ –≤ –≤–∞—à–µ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.

    üìù –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
    –í–≤–µ–¥–∏—Ç–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —á–∏—Å–µ–ª (–¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ ';'):
    10
    3
    7
    42
    15
    -1
    –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ: 42
    –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ: 3

    –ê–≤—Ç–æ—Ä: –î—É–ø–ª–µ–π –ú.–ò.
    –í–µ—Ä—Å–∏—è: 1.0
    –î–∞—Ç–∞: 09-03-2025
*/

#include <iostream>
#include <sstream> // –¥–ª—è std::istringstream
#include <vector>
#include <climits> // –¥–ª—è INT_MIN –∏ INT_MAX
using namespace std;

int main() {
    string input;
    vector<int> numbers;

    cout << "–í–≤–µ–¥–∏—Ç–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —á–∏—Å–µ–ª (–¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ ';'):" << endl;

    // –°—á–∏—Ç—ã–≤–∞–µ–º –≤—Å—é —Å—Ç—Ä–æ–∫—É –≤–≤–æ–¥–∞
    getline(cin, input, ';');

    // –ò—Å–ø–æ–ª—å–∑—É–µ–º stringstream –¥–ª—è —Ä–∞–∑–±–∏–µ–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ –Ω–∞ —á–∏—Å–ª–∞
    istringstream stream(input);
    int number;
    while (stream >> number) {
        numbers.push_back(number);
    }

    // –ï—Å–ª–∏ —á–∏—Å–ª–∞ –Ω–µ –±—ã–ª–∏ –≤–≤–µ–¥–µ–Ω—ã
    if (numbers.empty()) {
        cout << "–í—ã –Ω–µ –≤–≤–µ–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ —á–∏—Å–ª–∞." << endl;
        return 0;
    }

    // –ü–æ–∏—Å–∫ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–≥–æ —á–∏—Å–ª–∞
    int maxNumber = INT_MIN;
    int minNumber = INT_MAX;

    for (int num : numbers) {
        if (num > maxNumber) {
            maxNumber = num;
        }
        if (num < minNumber) {
            minNumber = num;
        }
    }

    // –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    cout << "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ: " << maxNumber << endl;
    cout << "–ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ: " << minNumber << endl;

    return 0;
}
