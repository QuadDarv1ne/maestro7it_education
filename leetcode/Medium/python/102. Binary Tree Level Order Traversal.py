'''
https://leetcode.com/problems/binary-tree-level-order-traversal/description/
'''

class Solution:
    def levelOrder(self, root):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏—è —É–∑–ª–æ–≤ –±–∏–Ω–∞—Ä–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞ –ø–æ —É—Ä–æ–≤–Ω—è–º.
        –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è BFS —Å –æ—á–µ—Ä–µ–¥—å—é.

        :param root: –∫–æ—Ä–µ–Ω—å –¥–µ—Ä–µ–≤–∞
        :return: —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–æ–≤ –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ —É—Ä–æ–≤–Ω—è–º
        """
        if not root:
            return []
        result = []
        queue = deque([root])
        while queue:
            level = []
            for _ in range(len(queue)):
                node = queue.popleft()
                level.append(node.val)
                if node.left:
                    queue.append(node.left)
                if node.right:
                    queue.append(node.right)
            result.append(level)
        return result

''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks