'''
https://leetcode.com/problems/validate-ip-address/description/
'''

import re

class Solution:
    def validIPAddress(self, queryIP):
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ queryIP –¥–æ–ø—É—Å—Ç–∏–º—ã–º IPv4 –∏–ª–∏ IPv6 –∞–¥—Ä–µ—Å–æ–º.

        –ê–ª–≥–æ—Ä–∏—Ç–º:
        1. –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ—á–∫—É ('.'), –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫ IPv4.
        2. –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–≤–æ–µ—Ç–æ—á–∏–µ (':'), –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫ IPv6.
        3. –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–∏ —Ç–æ–≥–æ, –Ω–∏ –¥—Ä—É–≥–æ–≥–æ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 'Neither'.

        –í—Ä–µ–º—è: O(n), –≥–¥–µ n ‚Äî –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ queryIP.
        –ü–∞–º—è—Ç—å: O(1).
        """
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ IPv4
        if '.' in queryIP:
            parts = queryIP.split('.')
            if len(parts) == 4:
                for part in parts:
                    if not part.isdigit() or not 0 <= int(part) <= 255 or (part[0] == '0' and len(part) > 1):
                        return "Neither"
                return "IPv4"
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ IPv6
        elif ':' in queryIP:
            parts = queryIP.split(':')
            if len(parts) == 8:
                for part in parts:
                    if not (1 <= len(part) <= 4) or not all(c in '0123456789abcdefABCDEF' for c in part):
                        return "Neither"
                return "IPv6"
        
        return "Neither"

''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks