'''
https://leetcode.com/problems/3sum-closest/description/
'''

# from typing import List

class Solution:
    # def threeSumClosest(self, nums: List[int], target: int) -> int:
    def threeSumClosest(self, nums, target):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—É–º–º—É —Ç—Ä—ë—Ö —á–∏—Å–µ–ª –∏–∑ nums, –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∏–∑–∫—É—é –∫ target.

        –ú–µ—Ç–æ–¥:
        1. –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ —Å–ø–∏—Å–∫–∞.
        2. –î–ª—è –∫–∞–∂–¥–æ–≥–æ i –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–≤–∞ —É–∫–∞–∑–∞—Ç–µ–ª—è, l –∏ r, –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–∞–∏–ª—É—á—à–µ–π —Å—É–º–º—ã.
        3. –û–±–Ω–æ–≤–ª—è–µ–º closest_sum –ø—Ä–∏ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–∏ –±–æ–ª–µ–µ –±–ª–∏–∑–∫–æ–π –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏.
        4. –ü—Ä–∏ —Ç–æ—á–Ω–æ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–∏ ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ä–∞–∑—É.

        –í—Ä–µ–º—è: O(n^2), –î–æ–ø. –ø–∞–º—è—Ç—å: O(1).
        """
        nums.sort()
        n = len(nums)
        closest_sum = nums[0] + nums[1] + nums[2]

        for i in range(n - 2):
            l, r = i + 1, n - 1
            while l < r:
                s = nums[i] + nums[l] + nums[r]
                if s == target:
                    return s
                if abs(s - target) < abs(closest_sum - target):
                    closest_sum = s
                if s < target:
                    l += 1
                else:
                    r -= 1

        return closest_sum

''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks