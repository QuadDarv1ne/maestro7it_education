/**
 * https://leetcode.com/problems/3sum/description/
 */

using System;
using System.Collections.Generic;

public class Solution {
    /**
     * –ó–∞–¥–∞—á–∞: –ù–∞–π—Ç–∏ –≤—Å–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ —Ç—Ä–æ–π–∫–∏ —á–∏—Å–µ–ª –≤ –º–∞—Å—Å–∏–≤–µ nums,
     * —Å—É–º–º–∞ –∫–æ—Ç–æ—Ä—ã—Ö —Ä–∞–≤–Ω–∞ –Ω—É–ª—é.
     *
     * –ú–µ—Ç–æ–¥:
     * - –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –º–∞—Å—Å–∏–≤–∞
     * - –î–≤–∞ —É–∫–∞–∑–∞—Ç–µ–ª—è –¥–ª—è –ø–æ–∏—Å–∫–∞
     * - –ü—Ä–æ–ø—É—Å–∫ –¥—É–±–ª–∏–∫–∞—Ç–æ–≤
     *
     * –°–ª–æ–∂–Ω–æ—Å—Ç—å:
     * –í—Ä–µ–º—è: O(n^2), –ü–∞–º—è—Ç—å: O(1)
     */
    public IList<IList<int>> ThreeSum(int[] nums) {
        Array.Sort(nums);
        var res = new List<IList<int>>();
        int n = nums.Length;

        for (int i = 0; i < n - 2; i++) {
            if (i > 0 && nums[i] == nums[i - 1]) continue;
            if (nums[i] > 0) break;

            int l = i + 1, r = n - 1;
            while (l < r) {
                int s = nums[i] + nums[l] + nums[r];
                if (s < 0) l++;
                else if (s > 0) r--;
                else {
                    res.Add(new List<int> { nums[i], nums[l], nums[r] });
                    while (l < r && nums[l] == nums[l + 1]) l++;
                    while (l < r && nums[r] == nums[r - 1]) r--;
                    l++; r--;
                }
            }
        }
        return res;
    }
}

/*
''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks
*/