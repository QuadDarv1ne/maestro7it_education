/**
 * https://leetcode.com/problems/remove-nth-node-from-end-of-list/description/
 */

/// <summary>
/// –£–¥–∞–ª—è–µ—Ç n-–π —É–∑–µ–ª —Å –∫–æ–Ω—Ü–∞ –æ–¥–Ω–æ—Å–≤—è–∑–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞.
/// –ê–ª–≥–æ—Ä–∏—Ç–º:
/// - –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ñ–∏–∫—Ç–∏–≤–Ω–∞—è –≥–æ–ª–æ–≤–∞ dummy
/// - –î–≤–∞ —É–∫–∞–∑–∞—Ç–µ–ª—è: fast –∏ slow
/// - fast –ø–µ—Ä–µ–¥–≤–∏–≥–∞–µ—Ç—Å—è –Ω–∞ n+1 —à–∞–≥ –≤–ø–µ—Ä—ë–¥
/// - –î–≤–∏–≥–∞–µ–º –æ–±–∞ —É–∫–∞–∑–∞—Ç–µ–ª—è, –ø–æ–∫–∞ fast != null
/// - slow.next ‚Äî —É–∑–µ–ª –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
/// –í—Ä–µ–º—è: O(L), –ü–∞–º—è—Ç—å: O(1)
/// </summary>
public class Solution {
    public ListNode RemoveNthFromEnd(ListNode head, int n) {
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode fast = dummy;
        ListNode slow = dummy;

        for (int i = 0; i <= n; i++) {
            fast = fast.next;
        }

        while (fast != null) {
            fast = fast.next;
            slow = slow.next;
        }

        slow.next = slow.next.next;
        return dummy.next;
    }
}

/*
''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks
*/