/**
 * https://leetcode.com/problems/integer-to-roman/description/
 */

public class Solution {
    /// <summary>
    /// –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ (1 ‚â§ num ‚â§ 3999) –≤ —Ä–∏–º—Å–∫–æ–µ —á–∏—Å–ª–æ.
    ///
    /// –ê–ª–≥–æ—Ä–∏—Ç–º:
    /// - –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –ø–∞—Ä–∞–º (–∑–Ω–∞—á–µ–Ω–∏–µ, —Å–∏–º–≤–æ–ª) –≤ –ø–æ—Ä—è–¥–∫–µ —É–±—ã–≤–∞–Ω–∏—è.
    /// - –ü–æ–∫–∞ num ‚â• –∑–Ω–∞—á–µ–Ω–∏–µ, –≤—ã—á–∏—Ç–∞–µ–º –µ–≥–æ –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Å–∏–º–≤–æ–ª –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
    /// </summary>
    public string IntToRoman(int num) {
        int[] values = {1000,900,500,400,100,90,50,40,10,9,5,4,1};
        string[] symbols = {"M","CM","D","CD","C","XC","L","XL","X","IX","V","IV","I"};
        var sb = new System.Text.StringBuilder();
        for (int i = 0; i < values.Length; i++) {
            while (num >= values[i]) {
                num -= values[i];
                sb.Append(symbols[i]);
            }
        }
        return sb.ToString();
    }
}

/*
''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks
*/