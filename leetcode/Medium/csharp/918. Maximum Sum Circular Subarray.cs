/**
 * https://leetcode.com/problems/maximum-sum-circular-subarray/description/?envType=study-plan-v2&envId=top-interview-150
 */

public class Solution {
    /// <summary>
    /// –ú–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É –ø–æ–¥–º–∞—Å—Å–∏–≤–∞ –≤ –∫–æ–ª—å—Ü–µ–≤–æ–º –º–∞—Å—Å–∏–≤–µ.
    /// –ö–æ–ª—å—Ü–µ–≤–æ–π –º–∞—Å—Å–∏–≤ ‚Äî —ç—Ç–æ –º–∞—Å—Å–∏–≤, –≥–¥–µ –∫–æ–Ω–µ—Ü —Å–æ–µ–¥–∏–Ω—ë–Ω —Å –Ω–∞—á–∞–ª–æ–º,
    /// –ø–æ—ç—Ç–æ–º—É –ø–æ–¥–º–∞—Å—Å–∏–≤ –º–æ–∂–µ—Ç –ø–µ—Ä–µ–∫—Ä—ã–≤–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ –≥—Ä–∞–Ω–∏—Ü—É –º–∞—Å—Å–∏–≤–∞.
    /// </summary>
    /// <param name="nums">–í—Ö–æ–¥–Ω–æ–π –º–∞—Å—Å–∏–≤ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª.</param>
    /// <returns>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–¥–º–∞—Å—Å–∏–≤–∞ —Å —É—á—ë—Ç–æ–º –∫–æ–ª—å—Ü–µ–≤–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã.</returns>
    public int MaxSubarraySumCircular(int[] nums) {
        int totalSum = 0;
        foreach (int num in nums) totalSum += num;
        
        int maxSum = Kadane(nums, false);
        int minSum = Kadane(nums, true);

        // –ï—Å–ª–∏ –≤—Å–µ —á–∏—Å–ª–∞ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
        if (totalSum == minSum)
            return maxSum;

        return Math.Max(maxSum, totalSum - minSum);
    }

    /// <summary>
    /// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ –ö–∞–¥–∞–Ω–µ.
    /// –ï—Å–ª–∏ findMin == false ‚Äî –∏—â–µ—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É –ø–æ–¥–º–∞—Å—Å–∏–≤–∞.
    /// –ï—Å–ª–∏ findMin == true ‚Äî –∏—â–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é —Å—É–º–º—É –ø–æ–¥–º–∞—Å—Å–∏–≤–∞.
    /// </summary>
    /// <param name="nums">–í—Ö–æ–¥–Ω–æ–π –º–∞—Å—Å–∏–≤ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª.</param>
    /// <param name="findMin">–§–ª–∞–≥ –ø–æ–∏—Å–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π —Å—É–º–º—ã.</param>
    /// <returns>–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∏–ª–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–¥–º–∞—Å—Å–∏–≤–∞.</returns>
    private int Kadane(int[] nums, bool findMin) {
        int currSum = nums[0];
        int result = nums[0];
        for (int i = 1; i < nums.Length; i++) {
            if (findMin) {
                currSum = Math.Min(nums[i], currSum + nums[i]);
                result = Math.Min(result, currSum);
            } else {
                currSum = Math.Max(nums[i], currSum + nums[i]);
                result = Math.Max(result, currSum);
            }
        }
        return result;
    }
}

/*
''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks
*/