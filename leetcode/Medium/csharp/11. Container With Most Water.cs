/**
 * https://leetcode.com/problems/container-with-most-water/description/
 */

public class Solution {
    /// <summary>
    /// –ù–∞—Ö–æ–¥–∏—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –ø–ª–æ—â–∞–¥—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ –¥–ª—è –≤–æ–¥—ã.
    /// 
    /// height[i] ‚Äî –≤—ã—Å–æ—Ç–∞ –ª–∏–Ω–∏–∏. 
    /// –ù—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –¥–≤–µ –ª–∏–Ω–∏–∏, —á—Ç–æ–±—ã –ø–ª–æ—â–∞–¥—å –±—ã–ª–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π.
    /// 
    /// –ê–ª–≥–æ—Ä–∏—Ç–º:
    /// - –î–≤–∞ —É–∫–∞–∑–∞—Ç–µ–ª—è (—Å–ª–µ–≤–∞ –∏ —Å–ø—Ä–∞–≤–∞).
    /// - –ü–ª–æ—â–∞–¥—å = (—à–∏—Ä–∏–Ω–∞) * min(–≤—ã—Å–æ—Ç—ã).
    /// - –î–≤–∏–≥–∞–µ–º –º–µ–Ω—å—à–∏–π –ø–æ –≤—ã—Å–æ—Ç–µ —É–∫–∞–∑–∞—Ç–µ–ª—å.
    /// - –°–ª–æ–∂–Ω–æ—Å—Ç—å: O(n), –ø–∞–º—è—Ç—å: O(1).
    /// </summary>
    public int MaxArea(int[] height) {
        int left = 0, right = height.Length - 1;
        int maxArea = 0;
        while (left < right) {
            int area = (right - left) * Math.Min(height[left], height[right]);
            maxArea = Math.Max(maxArea, area);
            if (height[left] < height[right]) {
                left++;
            } else {
                right--;
            }
        }
        return maxArea;
    }
}

/*
''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks
*/