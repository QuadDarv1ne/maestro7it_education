/**
 * https://leetcode.com/problems/sort-matrix-by-diagonals/description/?envType=daily-question&envId=2025-08-28
 */

using System;
using System.Collections.Generic;

public class Solution {
    /// <summary>
    /// SortMatrix
    ///
    /// –°–æ—Ä—Ç–∏—Ä—É–µ—Ç –¥–∏–∞–≥–æ–Ω–∞–ª–∏ –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–π –º–∞—Ç—Ä–∏—Ü—ã n x n:
    /// - –¥–∏–∞–≥–æ–Ω–∞–ª–∏, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è –≤ –ª–µ–≤–æ–º —Å—Ç–æ–ª–±—Ü–µ (–≤–∫–ª—é—á–∞—è –≥–ª–∞–≤–Ω—É—é) ‚Äî —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ —É–±—ã–≤–∞–Ω–∏—é;
    /// - –¥–∏–∞–≥–æ–Ω–∞–ª–∏, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è –≤ –≤–µ—Ä—Ö–Ω–µ–π —Å—Ç—Ä–æ–∫–µ (–∫—Ä–æ–º–µ (0,0)) ‚Äî —Å–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é.
    /// </summary>
    /// <param name="grid">–í—Ö–æ–¥–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞ (jagged int[][])</param>
    /// <returns>–ú–∞—Ç—Ä–∏—Ü–∞ —Å –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –¥–∏–∞–≥–æ–Ω–∞–ª—è–º–∏</returns>
    public int[][] SortMatrix(int[][] grid) {
        int n = grid.Length;
        if (n == 0) return grid;

        // –ù–∏–∂–Ω–µ-–ª–µ–≤–∞—è —á–∞—Å—Ç—å + –≥–ª–∞–≤–Ω–∞—è –¥–∏–∞–≥–æ–Ω–∞–ª—å (startRow –æ—Ç n-1 –¥–æ 0)
        for (int startRow = n - 1; startRow >= 0; startRow--) {
            int i = startRow, j = 0;
            var vals = new List<int>();
            while (i < n && j < n) {
                vals.Add(grid[i][j]);
                i++; j++;
            }
            // non-increasing (–ø–æ —É–±—ã–≤–∞–Ω–∏—é)
            vals.Sort((a, b) => b.CompareTo(a));
            i = startRow; j = 0;
            int k = 0;
            while (i < n && j < n) {
                grid[i][j] = vals[k++];
                i++; j++;
            }
        }

        // –í–µ—Ä—Ö–Ω–µ-–ø—Ä–∞–≤–∞—è —á–∞—Å—Ç—å (–∫—Ä–æ–º–µ –≥–ª–∞–≤–Ω–æ–π): startCol –æ—Ç 1 –¥–æ n-1
        for (int startCol = 1; startCol < n; startCol++) {
            int i = 0, j = startCol;
            var vals = new List<int>();
            while (i < n && j < n) {
                vals.Add(grid[i][j]);
                i++; j++;
            }
            // non-decreasing (–ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é)
            vals.Sort();
            i = 0; j = startCol;
            int k = 0;
            while (i < n && j < n) {
                grid[i][j] = vals[k++];
                i++; j++;
            }
        }

        return grid;
    }

    // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥ —Å –º–∞–ª–µ–Ω—å–∫–æ–π –±—É–∫–≤—ã (–æ—Å—Ç–∞–≤–∏–ª –Ω–∞ —Å–ª—É—á–∞–π –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –æ–∂–∏–¥–∞—é—Ç sortMatrix)
    public int[][] sortMatrix(int[][] grid) {
        return SortMatrix(grid);
    }
}

/*
''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks
*/