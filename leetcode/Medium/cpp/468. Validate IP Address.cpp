/**
 * https://leetcode.com/problems/validate-ip-address/description/
 */

#include <string>
#include <vector>
#include <sstream>
#include <cctype>
using namespace std;

class Solution {
public:
    string validIPAddress(string queryIP) {
        /**
         * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞ queryIP –¥–æ–ø—É—Å—Ç–∏–º—ã–º IPv4 –∏–ª–∏ IPv6 –∞–¥—Ä–µ—Å–æ–º.
         *
         * –ê–ª–≥–æ—Ä–∏—Ç–º:
         * 1. –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–æ—á–∫—É ('.'), –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫ IPv4.
         * 2. –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–≤–æ–µ—Ç–æ—á–∏–µ (':'), –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫ IPv6.
         * 3. –ï—Å–ª–∏ —Å—Ç—Ä–æ–∫–∞ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–∏ —Ç–æ–≥–æ, –Ω–∏ –¥—Ä—É–≥–æ–≥–æ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 'Neither'.
         *
         * –í—Ä–µ–º—è: O(n), –≥–¥–µ n ‚Äî –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ queryIP.
         * –ü–∞–º—è—Ç—å: O(1).
         */
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ IPv4
        if (count(queryIP.begin(), queryIP.end(), '.') == 3) {
            vector<string> parts;
            string part;
            stringstream ss(queryIP);
            while (getline(ss, part, '.')) {
                parts.push_back(part);
            }
            if (parts.size() != 4) return "Neither";
            for (auto &p : parts) {
                if (p.empty() || p.size() > 3) return "Neither";
                if (!all_of(p.begin(), p.end(), ::isdigit)) return "Neither";
                int num = stoi(p);
                if (num < 0 || num > 255) return "Neither";
                if (p.size() > 1 && p[0] == '0') return "Neither"; // –≤–µ–¥—É—â–∏–µ –Ω—É–ª–∏
            }
            return "IPv4";
        }
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ IPv6
        else if (count(queryIP.begin(), queryIP.end(), ':') == 7) {
            vector<string> parts;
            string part;
            stringstream ss(queryIP);
            while (getline(ss, part, ':')) {
                parts.push_back(part);
            }
            if (parts.size() != 8) return "Neither";
            for (auto &p : parts) {
                if (p.empty() || p.size() > 4) return "Neither";
                for (char c : p) {
                    if (!isxdigit(c)) return "Neither"; // —Å–∏–º–≤–æ–ª –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —à–µ—Å—Ç–Ω–∞–¥—Ü–∞—Ç–µ—Ä–∏—á–Ω—ã–º
                }
            }
            return "IPv6";
        }
        return "Neither";
    }
};

/*
''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks
*/