/**
 * https://leetcode.com/problems/zigzag-conversion/description/
 */

#include <string>
#include <vector>
using namespace std;

/**
 * @brief –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É s –≤ –∑–∏–≥–∑–∞–≥–æ–æ–±—Ä–∞–∑–Ω—ã–π –ø–∞—Ç—Ç–µ—Ä–Ω —Å numRows —Å—Ç—Ä–æ–∫–∞–º–∏.
 *
 * –ê–ª–≥–æ—Ä–∏—Ç–º:
 * - –ï—Å–ª–∏ numRows == 1 –∏–ª–∏ numRows >= s.length(), –≤–æ–∑–≤—Ä–∞—â–∞–µ–º s.
 * - –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–µ–∫—Ç–æ—Ä —Å—Ç—Ä–æ–∫ rows –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫–∞–∂–¥–æ–π —Å—Ç—Ä–æ–∫–∏ –ø–∞—Ç—Ç–µ—Ä–Ω–∞.
 * - –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–∏–º–≤–æ–ª—ã —Å—Ç—Ä–æ–∫–∏ –ø–æ —Å—Ç—Ä–æ–∫–∞–º –∑–∏–≥–∑–∞–≥–æ–æ–±—Ä–∞–∑–Ω–æ–≥–æ –ø–∞—Ç—Ç–µ—Ä–Ω–∞.
 * - –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å—Ç—Ä–æ–∫–∏ –≤ –æ–¥–∏–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
 *
 * –í—Ä–µ–º—è: O(n), –ø–∞–º—è—Ç—å: O(n)
 */
class Solution {
public:
    string convert(string s, int numRows) {
        if (numRows == 1 || numRows >= s.size()) return s;

        vector<string> rows(numRows);
        int currentRow = 0;
        bool goingDown = false;

        for (char c : s) {
            rows[currentRow] += c;
            if (currentRow == 0 || currentRow == numRows - 1)
                goingDown = !goingDown;
            currentRow += goingDown ? 1 : -1;
        }

        string result;
        for (const string& row : rows) {
            result += row;
        }
        return result;
    }
};

/*
''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks
*/