/**
 * https://leetcode.com/problems/rotate-array/description/
 */

#include <vector>
#include <algorithm>

class Solution {
public:
    /**
     * @brief –ü–æ–≤–æ—Ä–æ—Ç –º–∞—Å—Å–∏–≤–∞ –≤–ø—Ä–∞–≤–æ –Ω–∞ k –ø–æ–∑–∏—Ü–∏–π
     * 
     * –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ nums –∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ k. –û–Ω–∞ –∏–∑–º–µ–Ω—è–µ—Ç –º–∞—Å—Å–∏–≤ in-place,
     * –ø–æ–≤–æ—Ä–∞—á–∏–≤–∞—è –µ–≥–æ —ç–ª–µ–º–µ–Ω—Ç—ã –≤–ø—Ä–∞–≤–æ –Ω–∞ k —à–∞–≥–æ–≤.
     * 
     * @param nums - —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–µ–∫—Ç–æ—Ä —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª
     * @param k - —á–∏—Å–ª–æ —à–∞–≥–æ–≤ –¥–ª—è –ø–æ–≤–æ—Ä–æ—Ç–∞ –º–∞—Å—Å–∏–≤–∞
     */
    void rotate(std::vector<int>& nums, int k) {
        int n = nums.size();
        k %= n; // –Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ k > n
        std::reverse(nums.begin(), nums.end());
        std::reverse(nums.begin(), nums.begin() + k);
        std::reverse(nums.begin() + k, nums.end());
    }
};

// Solution().rotate(nums, k);

/*
''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks
*/