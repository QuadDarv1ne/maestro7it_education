/**
 * https://leetcode.com/problems/network-delay-time/description/
 */

#include <vector>
#include <queue>
#include <climits>
#include <algorithm>

using namespace std;

class Solution {
public:
    /**
     * –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–ª—è –¥–æ—Å—Ç–∞–≤–∫–∏ —Å–∏–≥–Ω–∞–ª–∞ –æ—Ç —É–∑–ª–∞ k –∫–æ –≤—Å–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–º —É–∑–ª–∞–º —Å–µ—Ç–∏.
     * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∞–ª–≥–æ—Ä–∏—Ç–º –î–µ–π–∫—Å—Ç—Ä—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –∫—Ä–∞—Ç—á–∞–π—à–∏—Ö –ø—É—Ç–µ–π.
     *
     * @param times –°–ø–∏—Å–æ–∫ —Ä—ë–±–µ—Ä —Å–µ—Ç–∏, –≥–¥–µ –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç [u, v, w] –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —Å–∏–≥–Ω–∞–ª –æ—Ç —É–∑–ª–∞ u –¥–æ —É–∑–ª–∞ v –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –∑–∞ w –µ–¥–∏–Ω–∏—Ü –≤—Ä–µ–º–µ–Ω–∏.
     * @param n –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–∑–ª–æ–≤ –≤ —Å–µ—Ç–∏.
     * @param k –ò–Ω–¥–µ–∫—Å –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ —É–∑–ª–∞ (1-based).
     * @return –ú–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏ —Å–∏–≥–Ω–∞–ª–∞ –∫–æ –≤—Å–µ–º —É–∑–ª–∞–º —Å–µ—Ç–∏ –∏–ª–∏ -1, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.
     */
    int networkDelayTime(vector<vector<int>>& times, int n, int k) {
        vector<vector<pair<int, int>>> graph(n + 1);
        for (const auto& time : times) {
            graph[time[0]].emplace_back(time[1], time[2]);
        }

        vector<int> dist(n + 1, INT_MAX);
        dist[k] = 0;

        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;
        pq.push({0, k});

        while (!pq.empty()) {
            auto [d, node] = pq.top();
            pq.pop();

            if (d > dist[node]) continue;

            for (const auto& [neighbor, time] : graph[node]) {
                int newDist = d + time;
                if (newDist < dist[neighbor]) {
                    dist[neighbor] = newDist;
                    pq.push({newDist, neighbor});
                }
            }
        }

        int maxDist = *max_element(dist.begin() + 1, dist.end());
        return maxDist == INT_MAX ? -1 : maxDist;
    }
};

/*
''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks
*/