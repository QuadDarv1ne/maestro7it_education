/**
 * https://leetcode.com/problems/find-the-minimum-area-to-cover-all-ones-i/description/?envType=daily-question&envId=2025-08-22
 */

#include <vector>
#include <climits>
using namespace std;

class Solution {
public:
    /**
     * –§—É–Ω–∫—Ü–∏—è –≤—ã—á–∏—Å–ª—è–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –ø–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞, –ø–æ–∫—Ä—ã–≤–∞—é—â–µ–≥–æ –≤—Å–µ –µ–¥–∏–Ω–∏—Ü—ã –≤ –º–∞—Ç—Ä–∏—Ü–µ.
     *
     * –ê–ª–≥–æ—Ä–∏—Ç–º:
     * 1. –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–µ –∏–Ω–¥–µ–∫—Å—ã —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤, —Å–æ–¥–µ—Ä–∂–∞—â–∏–µ '1'.
     * 2. –ü–ª–æ—â–∞–¥—å —Ä–∞–≤–Ω–∞ (maxRow - minRow + 1) * (maxCol - minCol + 1).
     * 3. –ï—Å–ª–∏ –µ–¥–∏–Ω–∏—Ü –Ω–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º 0.
     *
     * –°–ª–æ–∂–Ω–æ—Å—Ç—å:
     * - –í—Ä–µ–º—è: O(m * n)
     * - –ü–∞–º—è—Ç—å: O(1)
     */
    int minimumArea(vector<vector<int>>& grid) {
        int m = grid.size(), n = grid[0].size();
        int minR = INT_MAX, minC = INT_MAX, maxR = -1, maxC = -1;

        for (int i = 0; i < m; ++i)
            for (int j = 0; j < n; ++j)
                if (grid[i][j] == 1) {
                    minR = min(minR, i);
                    minC = min(minC, j);
                    maxR = max(maxR, i);
                    maxC = max(maxC, j);
                }

        return (maxR == -1) ? 0 : (maxR - minR + 1) * (maxC - minC + 1);
    }
};

/*
''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks
*/