/**
 * https://leetcode.com/problems/decode-ways/description/
 */
class Solution {
    /**
     * –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–æ—Å–æ–±–æ–≤ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ —Ü–∏—Ñ—Ä –ø–æ —Å—Ö–µ–º–µ A-Z = 1-26.
     *
     * @param s —Å—Ç—Ä–æ–∫–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è —Ü–∏—Ñ—Ä—ã
     * @return —á–∏—Å–ª–æ —Å–ø–æ—Å–æ–±–æ–≤ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è
     *
     * –ê–ª–≥–æ—Ä–∏—Ç–º:
     * dp[0] = 1;
     * –î–ª—è –∫–∞–∂–¥–æ–≥–æ i:
     *   –µ—Å–ª–∏ s[i-1] != '0': dp[i] += dp[i-1]
     *   –µ—Å–ª–∏ 10 <= Integer.parseInt(s[i-2..i-1]) <= 26: dp[i] += dp[i-2]
     *
     * –í—Ä–µ–º—è: O(n)
     * –ü–∞–º—è—Ç—å: O(n), –º–æ–∂–Ω–æ —É–º–µ–Ω—å—à–∏—Ç—å –¥–æ O(1)
     */
    public int numDecodings(String s) {
        if (s == null || s.isEmpty() || s.charAt(0) == '0') {
            return 0;
        }
        int n = s.length();
        int[] dp = new int[n + 1];
        dp[0] = 1;
        dp[1] = 1;
        for (int i = 2; i <= n; i++) {
            char c = s.charAt(i - 1);
            if (c != '0') {
                dp[i] += dp[i - 1];
            }
            char p = s.charAt(i - 2);
            if (p != '0') {
                int two = Integer.parseInt(s.substring(i - 2, i));
                if (two >= 10 && two <= 26) {
                    dp[i] += dp[i - 2];
                }
            }
        }
        return dp[n];
    }
}

/*
''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks
*/