/**
 * https://leetcode.com/problems/count-square-submatrices-with-all-ones/description/?envType=daily-question&envId=2025-08-20
 */

class Solution {
    /**
     * –ó–∞–¥–∞—á–∞: –ø–æ—Å—á–∏—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö –ø–æ–¥–º–∞—Ç—Ä–∏—Ü,
     * —Å–æ–¥–µ—Ä–∂–∞—â–∏—Ö —Ç–æ–ª—å–∫–æ –µ–¥–∏–Ω–∏—Ü—ã.
     *
     * –ê–ª–≥–æ—Ä–∏—Ç–º:
     * –î–ª—è –∫–∞–∂–¥–æ–π —è—á–µ–π–∫–∏ (i, j) —Å—á–∏—Ç–∞–µ–º dp[i][j] ‚Äî
     * —Ä–∞–∑–º–µ—Ä –Ω–∞–∏–±–æ–ª—å—à–µ–≥–æ –∫–≤–∞–¥—Ä–∞—Ç–∞, –æ–∫–∞–Ω—á–∏–≤–∞—é—â–µ–≥–æ—Å—è –≤ —ç—Ç–æ–π —Ç–æ—á–∫–µ.
     * –ï—Å–ª–∏ matrix[i][j] == 1:
     *   dp[i][j] = min(dp[i-1][j], dp[i][j-1], dp[i-1][j-1]) + 1
     * –†–µ–∑—É–ª—å—Ç–∞—Ç ‚Äî —Å—É–º–º–∞ –≤—Å–µ—Ö dp[i][j].
     *
     * –°–ª–æ–∂–Ω–æ—Å—Ç—å:
     *   O(m * n) –ø–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ O(1) –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –ø–∞–º—è—Ç–∏ (–µ—Å–ª–∏ –æ–±–Ω–æ–≤–ª—è—Ç—å –º–∞—Ç—Ä–∏—Ü—É).
     */
    public int countSquares(int[][] matrix) {
        int m = matrix.length, n = matrix[0].length;
        int ans = 0;
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (matrix[i][j] == 1 && i > 0 && j > 0) {
                    matrix[i][j] = Math.min(
                        Math.min(matrix[i-1][j], matrix[i][j-1]),
                        matrix[i-1][j-1]
                    ) + 1;
                }
                ans += matrix[i][j];
            }
        }
        return ans;
    }
}

/*
''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks
*/