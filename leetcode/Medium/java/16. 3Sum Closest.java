/**
 * https://leetcode.com/problems/3sum-closest/description/
 */

import java.util.*;

class Solution {
    /**
     * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—É–º–º—É —Ç—Ä—ë—Ö —á–∏—Å–µ–ª, –Ω–∞–∏–±–æ–ª–µ–µ –±–ª–∏–∑–∫—É—é –∫ target.
     *
     * –ú–µ—Ç–æ–¥: —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ + –¥–≤–∞ —É–∫–∞–∑–∞—Ç–µ–ª—è (l, r).
     * –í—Ä–µ–º—è: O(n^2), –ü–∞–º—è—Ç—å: O(1).
     */
    public int threeSumClosest(int[] nums, int target) {
        Arrays.sort(nums);
        int n = nums.length;
        int closestSum = nums[0] + nums[1] + nums[2];

        for (int i = 0; i < n - 2; i++) {
            int l = i + 1, r = n - 1;
            while (l < r) {
                int sum = nums[i] + nums[l] + nums[r];
                if (sum == target) {
                    return sum;
                }
                if (Math.abs(sum - target) < Math.abs(closestSum - target)) {
                    closestSum = sum;
                }
                if (sum < target) {
                    l++;
                } else {
                    r--;
                }
            }
        }
        return closestSum;
    }
}

/*
''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks
*/