/**
 * https://leetcode.com/problems/house-robber/description/?envType=study-plan-v2&envId=top-interview-150
 */

class Solution {
    /**
     * –ó–∞–¥–∞—á–∞: –ú–∞–∫—Å–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å—É–º–º—É –¥–µ–Ω–µ–≥, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ —É–∫—Ä–∞—Å—Ç—å –∏–∑ –¥–æ–º–æ–≤, –Ω–µ –≥—Ä–∞–±—è –¥–≤–∞ —Å–æ—Å–µ–¥–Ω–∏—Ö.
     *
     * @param nums –º–∞—Å—Å–∏–≤ —Å –¥–µ–Ω—å–≥–∞–º–∏ –≤ –∫–∞–∂–¥–æ–º –¥–æ–º–µ
     * @return –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞, –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ —É–∫—Ä–∞—Å—Ç—å
     *
     * –ê–ª–≥–æ—Ä–∏—Ç–º:
     * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ:
     * dp[i] = max(dp[i-1], dp[i-2] + nums[i])
     * –≥–¥–µ dp[i] ‚Äî –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø—Ä–∏ –≥—Ä–∞–±–µ–∂–∞—Ö –¥–æ–º–æ–≤ —Å 0 –ø–æ i.
     *
     * –í—Ä–µ–º—è: O(n), –ü–∞–º—è—Ç—å: O(n)
     */
    public int rob(int[] nums) {
        if (nums.length == 0) return 0;
        if (nums.length == 1) return nums[0];

        int n = nums.length;
        int[] dp = new int[n];
        dp[0] = nums[0];
        dp[1] = Math.max(nums[0], nums[1]);

        for (int i = 2; i < n; i++) {
            dp[i] = Math.max(dp[i-1], dp[i-2] + nums[i]);
        }
        return dp[n-1];
    }
}

/*
''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks
*/