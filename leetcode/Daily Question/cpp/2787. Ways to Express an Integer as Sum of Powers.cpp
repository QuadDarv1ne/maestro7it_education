/**
 * https://leetcode.com/problems/ways-to-express-an-integer-as-sum-of-powers/description/?envType=daily-question&envId=2025-08-12
 */

#include <vector>

/**
 * –ó–∞–¥–∞—á–∞: –ù–∞–π—Ç–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–æ—Å–æ–±–æ–≤ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å —á–∏—Å–ª–æ n –∫–∞–∫ —Å—É–º–º—É —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª,
 * –≤–æ–∑–≤–µ–¥—ë–Ω–Ω—ã—Ö –≤ —Å—Ç–µ–ø–µ–Ω—å x.
 * 
 * –†–µ—à–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –º–µ–º–æ–∏–∑–∞—Ü–∏–µ–π –∏ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω—ã–π –æ–±—Ö–æ–¥.
 */

const int MOD = 1e9 + 7;

/**
 * –¶–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–æ–µ –≤–æ–∑–≤–µ–¥–µ–Ω–∏–µ –≤ —Å—Ç–µ–ø–µ–Ω—å.
 * 
 * @param base - –æ—Å–Ω–æ–≤–∞–Ω–∏–µ —Å—Ç–µ–ø–µ–Ω–∏.
 * @param exp - –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å —Å—Ç–µ–ø–µ–Ω–∏.
 * @return –†–µ–∑—É–ª—å—Ç–∞—Ç base^exp —Ç–∏–ø–∞ long long.
 */
long long intPow(int base, int exp) {
    long long result = 1;
    for (int i = 0; i < exp; ++i) {
        result *= base;
    }
    return result;
}

class Solution {
public:
    /**
     * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–ø–æ—Å–æ–±–æ–≤ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å n –∫–∞–∫ —Å—É–º–º—É —Å—Ç–µ–ø–µ–Ω–µ–π.
     * 
     * @param n - —á–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å.
     * @param x - —Å—Ç–µ–ø–µ–Ω—å, –≤ –∫–æ—Ç–æ—Ä—É—é –≤–æ–∑–≤–æ–¥—è—Ç—Å—è —á–∏—Å–ª–∞.
     * @return –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–æ—Å–æ–±–æ–≤ –ø–æ –º–æ–¥—É–ª—é 10^9+7.
     */
    int numberOfWays(int n, int x) {
        // –í—ã—á–∏—Å–ª—è–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –æ—Å–Ω–æ–≤–∞–Ω–∏–µ, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ i^x <= n
        int maxBase = 1;
        while (intPow(maxBase + 1, x) <= n) {
            maxBase++;
        }
        // dp[i][remaining] - –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–æ—Å–æ–±–æ–≤ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å remaining —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —á–∏—Å–µ–ª –¥–æ i
        std::vector<std::vector<int>> dp(maxBase + 1, std::vector<int>(n + 1, -1));
        return dfs(maxBase, n, x, dp);
    }

private:
    /**
     * –†–µ–∫—É—Ä—Å–∏–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å –º–µ–º–æ–∏–∑–∞—Ü–∏–µ–π –¥–ª—è –ø–æ–¥—Å—á—ë—Ç–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–ø–æ—Å–æ–±–æ–≤.
     * 
     * @param i - —Ç–µ–∫—É—â–µ–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.
     * @param remaining - –æ—Å—Ç–∞–≤—à–∞—è—Å—è —Å—É–º–º–∞, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å.
     * @param x - —Å—Ç–µ–ø–µ–Ω—å.
     * @param dp - –º–µ–º–æ–∏–∑–∞—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤.
     * @return –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–æ—Å–æ–±–æ–≤ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç—å remaining —Å —á–∏—Å–ª–∞–º–∏ <= i.
     */
    int dfs(int i, int remaining, int x, std::vector<std::vector<int>>& dp) {
        if (remaining == 0) return 1;       // –ù–∞—à–ª–∏ —Å–ø–æ—Å–æ–±
        if (i == 0 || remaining < 0) return 0; // –ù–µ—Ç —Å–ø–æ—Å–æ–±–∞
        if (dp[i][remaining] != -1) return dp[i][remaining]; // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç

        long long power = intPow(i, x);
        int include = 0;
        if (power <= remaining) {
            include = dfs(i - 1, remaining - power, x, dp);
        }
        int exclude = dfs(i - 1, remaining, x, dp);

        dp[i][remaining] = (include + exclude) % MOD;
        return dp[i][remaining];
    }
};

/*
''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks
*/