/**
 * https://leetcode.com/problems/binary-search/description/
 */

class Solution {
    /**
     * –í—ã–ø–æ–ª–Ω—è–µ—Ç –±–∏–Ω–∞—Ä–Ω—ã–π –ø–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–∞ target –≤ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –º–∞—Å—Å–∏–≤–µ nums.
     *
     * –ê–ª–≥–æ—Ä–∏—Ç–º:
     * 1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–≤–∞ —É–∫–∞–∑–∞—Ç–µ–ª—è: left –∏ right.
     * 2. –ü–æ–∫–∞ left <= right:
     *    - –í—ã—á–∏—Å–ª—è–µ–º mid = left + (right - left) / 2.
     *    - –ï—Å–ª–∏ nums[mid] == target, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º mid.
     *    - –ï—Å–ª–∏ nums[mid] < target, —Å–¥–≤–∏–≥–∞–µ–º left = mid + 1.
     *    - –ï—Å–ª–∏ nums[mid] > target, —Å–¥–≤–∏–≥–∞–µ–º right = mid - 1.
     * 3. –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º -1.
     *
     * @param nums   –û—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ —Ü–µ–ª—ã—Ö —á–∏—Å–µ–ª
     * @param target –¶–µ–ª–æ–µ —á–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏
     * @return –ò–Ω–¥–µ–∫—Å target –≤ –º–∞—Å—Å–∏–≤–µ nums –∏–ª–∏ -1, –µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω
     */
    public int search(int[] nums, int target) {
        int left = 0;
        int right = nums.length - 1;

        while (left <= right) {
            int mid = left + (right - left) / 2;

            if (nums[mid] == target) {
                return mid;
            } else if (nums[mid] < target) {
                left = mid + 1;
            } else {
                right = mid - 1;
            }
        }

        return -1; // —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω
    }
}

/*
''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks
*/