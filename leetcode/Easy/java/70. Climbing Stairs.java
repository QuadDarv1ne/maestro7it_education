/**
 * https://leetcode.com/problems/climbing-stairs/description/?envType=study-plan-v2&envId=top-interview-150
 */

class Solution {
    /**
     * –°—á–∏—Ç–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–æ—Å–æ–±–æ–≤ –ø–æ–¥–Ω—è—Ç—å—Å—è –Ω–∞ –ª–µ—Å—Ç–Ω–∏—Ü—É –∏–∑ n —Å—Ç—É–ø–µ–Ω–µ–π,
     * –¥–µ–ª–∞—è –∑–∞ —Ä–∞–∑ 1 –∏–ª–∏ 2 —à–∞–≥–∞.
     *
     * –ê–ª–≥–æ—Ä–∏—Ç–º:
     * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —É–ª—É—á—à–µ–Ω–Ω–æ–µ DP –≤ –¥—É—Ö–µ –§–∏–±–æ–Ω–∞—á—á–∏:
     * ways[n] = ways[n-1] + ways[n-2], —Ö—Ä–∞–Ω—è —Ç–æ–ª—å–∫–æ –¥–≤–∞ –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∑–Ω–∞—á–µ–Ω–∏—è.
     *
     * @param n ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—É–ø–µ–Ω–µ–π
     * @return ‚Äî —á–∏—Å–ª–æ —Å–ø–æ—Å–æ–±–æ–≤
     * –í—Ä–µ–º—è: O(n), –ü–∞–º—è—Ç—å: O(1)
     */
    public int climbStairs(int n) {
        if (n <= 1) return 1;
        int first = 1;
        int second = 2;
        for (int i = 3; i <= n; i++) {
            int third = first + second;
            first = second;
            second = third;
        }
        return second;
    }
}

/*
''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks
*/