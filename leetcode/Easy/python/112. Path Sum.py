'''
https://leetcode.com/problems/path-sum/description/

–ê–≤—Ç–æ—Ä: –î—É–ø–ª–µ–π –ú–∞–∫—Å–∏–º –ò–≥–æ—Ä–µ–≤–∏—á
ORCID: https://orcid.org/0009-0007-7605-539X
GitHub: https://github.com/QuadDarv1ne/
'''

# from typing import Optional

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —É–∑–ª–∞ –±–∏–Ω–∞—Ä–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution:
    # def hasPathSum(self, root: Optional[TreeNode], targetSum: int) -> bool:
    def hasPathSum(self, root, targetSum):
        """
        –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø—É—Ç—å –æ—Ç –∫–æ—Ä–Ω—è –¥–æ –ª–∏—Å—Ç–∞, —Å—É–º–º–∞ –∑–Ω–∞—á–µ–Ω–∏–π –∫–æ—Ç–æ—Ä–æ–≥–æ —Ä–∞–≤–Ω–∞ targetSum.

        :param root: –∫–æ—Ä–µ–Ω—å –±–∏–Ω–∞—Ä–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞
        :param targetSum: —Ü–µ–ª–µ–≤–∞—è —Å—É–º–º–∞
        :return: True, –µ—Å–ª–∏ —Ç–∞–∫–æ–π –ø—É—Ç—å —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∏–Ω–∞—á–µ False
        """
        if not root:
            return False

        if not root.left and not root.right:
            return root.val == targetSum

        return (self.hasPathSum(root.left, targetSum - root.val) or
                self.hasPathSum(root.right, targetSum - root.val))

''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks