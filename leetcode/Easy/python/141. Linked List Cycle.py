'''
https://leetcode.com/problems/linked-list-cycle/description/

–ê–≤—Ç–æ—Ä: –î—É–ø–ª–µ–π –ú–∞–∫—Å–∏–º –ò–≥–æ—Ä–µ–≤–∏—á
ORCID: https://orcid.org/0009-0007-7605-539X
GitHub: https://github.com/QuadDarv1ne/
'''

class Solution:
    def hasCycle(self, head):
        """
        –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ –æ–¥–Ω–æ—Å–≤—è–∑–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Ü–∏–∫–ª.

        –ê–ª–≥–æ—Ä–∏—Ç–º:
        - –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ "–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –∏ –±—ã—Å—Ç—Ä–æ–≥–æ —É–∫–∞–∑–∞—Ç–µ–ª–µ–π" (Floyd‚Äôs Cycle Detection)
        - slow –¥–≤–∏–≥–∞–µ—Ç—Å—è –Ω–∞ 1 —à–∞–≥, fast –¥–≤–∏–≥–∞–µ—Ç—Å—è –Ω–∞ 2 —à–∞–≥–∞
        - –ï—Å–ª–∏ slow == fast ‚Äî —Ü–∏–∫–ª –Ω–∞–π–¥–µ–Ω
        - –ï—Å–ª–∏ fast –∏–ª–∏ fast.next == None ‚Äî —Ü–∏–∫–ª–∞ –Ω–µ—Ç

        –í—Ä–µ–º—è: O(n)
        –ü–∞–º—è—Ç—å: O(1)

        :param head: ListNode ‚Äî –≥–æ–ª–æ–≤–∞ –æ–¥–Ω–æ—Å–≤—è–∑–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
        :return: bool ‚Äî True, –µ—Å–ª–∏ –µ—Å—Ç—å —Ü–∏–∫–ª; False, –µ—Å–ª–∏ —Ü–∏–∫–ª–∞ –Ω–µ—Ç
        """
        if not head or not head.next:
            return False

        slow, fast = head, head.next
        while fast and fast.next:
            if slow == fast:
                return True
            slow = slow.next
            fast = fast.next.next
        return False

''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks