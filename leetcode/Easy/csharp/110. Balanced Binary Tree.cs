/**
 * https://leetcode.com/problems/balanced-binary-tree/description/
 */

// public class TreeNode {
//     public int val;
//     public TreeNode left, right;
//     public TreeNode(int val=0, TreeNode left=null, TreeNode right=null) {
//         this.val = val;
//         this.left = left;
//         this.right = right;
//     }
// }

public class Solution {
    /// <summary>
    /// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—ã—Å–æ—Ç—É –¥–µ—Ä–µ–≤–∞, –∏–ª–∏ -1, –µ—Å–ª–∏ –¥–µ—Ä–µ–≤–æ –Ω–µ—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–æ.
    /// </summary>
    private int Height(TreeNode root) {
        if (root == null) return 0;
        int lh = Height(root.left);
        if (lh == -1) return -1;
        int rh = Height(root.right);
        if (rh == -1) return -1;
        if (Math.Abs(lh - rh) > 1) return -1;
        return 1 + Math.Max(lh, rh);
    }

    /// <summary>
    /// –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –¥–µ—Ä–µ–≤–æ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–º.
    /// </summary>
    public bool IsBalanced(TreeNode root) {
        return Height(root) != -1;
    }
}

/*
''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks
*/