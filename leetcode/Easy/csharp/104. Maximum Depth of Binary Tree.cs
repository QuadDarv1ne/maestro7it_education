/**
 * https://leetcode.com/problems/maximum-depth-of-binary-tree/description/
 */

/**
 * –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É–∑–ª–∞ –±–∏–Ω–∞—Ä–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    /// <summary>
    /// –ó–∞–¥–∞—á–∞: –ù–∞–π—Ç–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é –≥–ª—É–±–∏–Ω—É –±–∏–Ω–∞—Ä–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞.
    /// –ê–ª–≥–æ—Ä–∏—Ç–º:
    /// - –ï—Å–ª–∏ —É–∑–µ–ª —Ä–∞–≤–µ–Ω null ‚Üí –≤–µ—Ä–Ω—É—Ç—å 0.
    /// - –ò–Ω–∞—á–µ –≤–µ—Ä–Ω—É—Ç—å 1 + –º–∞–∫—Å–∏–º—É–º –≥–ª—É–±–∏–Ω –ª–µ–≤–æ–≥–æ –∏ –ø—Ä–∞–≤–æ–≥–æ –ø–æ–¥–¥–µ—Ä–µ–≤—å–µ–≤.
    ///
    /// –°–ª–æ–∂–Ω–æ—Å—Ç—å:
    /// - –í—Ä–µ–º—è: O(n), –≥–¥–µ n ‚Äî —á–∏—Å–ª–æ —É–∑–ª–æ–≤.
    /// - –ü–∞–º—è—Ç—å: O(h), –≥–¥–µ h ‚Äî –≤—ã—Å–æ—Ç–∞ –¥–µ—Ä–µ–≤–∞.
    /// </summary>
    public int MaxDepth(TreeNode root) {
        if (root == null) return 0;
        return 1 + Math.Max(MaxDepth(root.left), MaxDepth(root.right));
    }
}

/*
''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks
*/