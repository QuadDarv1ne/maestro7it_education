/**
 * https://leetcode.com/problems/intersection-of-two-arrays/description/
 */

#include <vector>
#include <unordered_set>
using namespace std;

class Solution {
public:
    /**
     * –ú–µ—Ç–æ–¥ –∏—â–µ—Ç –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ –¥–≤—É—Ö –º–∞—Å—Å–∏–≤–æ–≤.
     * –ö–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —É–Ω–∏–∫–∞–ª–µ–Ω.
     *
     * @param nums1 –ø–µ—Ä–≤—ã–π –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª
     * @param nums2 –≤—Ç–æ—Ä–æ–π –º–∞—Å—Å–∏–≤ —á–∏—Å–µ–ª
     * @return –≤–µ–∫—Ç–æ—Ä —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤, –≤—Å—Ç—Ä–µ—á–∞—é—â–∏—Ö—Å—è –≤ –æ–±–æ–∏—Ö –º–∞—Å—Å–∏–≤–∞—Ö
     */
    vector<int> intersection(vector<int>& nums1, vector<int>& nums2) {
        unordered_set<int> set1(nums1.begin(), nums1.end());
        vector<int> result;
        for (int num : nums2) {
            if (set1.erase(num)) { // erase –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 1, –µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –±—ã–ª –Ω–∞–π–¥–µ–Ω
                result.push_back(num);
            }
        }
        return result;
    }
};

/*
''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks
*/