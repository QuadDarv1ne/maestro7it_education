/**
 * https://leetcode.com/problems/valid-parentheses/description/
 */

#include <stack>
#include <unordered_map>
#include <string>
using namespace std;

class Solution {
public:
    /**
     * –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç–∏ —Å–∫–æ–±–æ—á–Ω–æ–π –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏.
     * 
     * –ê–ª–≥–æ—Ä–∏—Ç–º:
     * 1. –°—Ç–µ–∫ —Ö—Ä–∞–Ω–∏—Ç –æ—Ç–∫—Ä—ã–≤–∞—é—â–∏–µ —Å–∫–æ–±–∫–∏.
     * 2. –ü—Ä–∏ –≤—Å—Ç—Ä–µ—á–µ –∑–∞–∫—Ä—ã–≤–∞—é—â–µ–π —Å–∫–æ–±–∫–∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ
     *    —Å –≤–µ—Ä—Ö–æ–º —Å—Ç–µ–∫–∞.
     * 3. –ï—Å–ª–∏ —Å—Ç–µ–∫ –ø—É—Å—Ç –≤ –∫–æ–Ω—Ü–µ ‚Äî –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞.
     * 
     * @param s –°—Ç—Ä–æ–∫–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è —Ç–æ–ª—å–∫–æ '()[]{}'
     * @return true ‚Äî –µ—Å–ª–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞, –∏–Ω–∞—á–µ false
     */
    bool isValid(string s) {
        stack<char> st;
        unordered_map<char, char> mapping = {{')','('}, {']','['}, {'}','{'}};
        
        for (char c : s) {
            if (mapping.count(c) == 0) {
                st.push(c);
            } else {
                if (st.empty() || st.top() != mapping[c]) {
                    return false;
                }
                st.pop();
            }
        }
        return st.empty();
    }
};

/*
''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks
*/