/**
 * https://leetcode.com/problems/happy-number/description/
 */

#include <vector>
#include <string>
#include <unordered_map>
#include <array>
using namespace std;

class Solution {
public:
    bool isHappy(int n) {
        /*
         –ó–∞–¥–∞—á–∞: –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —á–∏—Å–ª–æ "—Å—á–∞—Å—Ç–ª–∏–≤—ã–º".
         –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª–æ: —Å—É–º–º–∏—Ä—É–µ–º –∫–≤–∞–¥—Ä–∞—Ç—ã —Ü–∏—Ñ—Ä –¥–æ —Ç–µ—Ö –ø–æ—Ä,
         –ø–æ–∫–∞ –Ω–µ –ø–æ–ø–∞–¥–µ–º –≤ 1 (—Å—á–∞—Å—Ç–ª–∏–≤–æ–µ) –∏–ª–∏ –≤ —Ü–∏–∫–ª.
        */
        unordered_set<int> seen;
        while (n != 1 && !seen.count(n)) {
            seen.insert(n);
            int next = 0;
            while (n > 0) {
                int d = n % 10;
                next += d * d;
                n /= 10;
            }
            n = next;
        }
        return n == 1;
    }
};

/*
''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks
*/