/**
 * https://leetcode.com/problems/length-of-longest-v-shaped-diagonal-segment/description/?envType=daily-question&envId=2025-08-27
 */

public class Solution {
    /**
     * –í –º–∞—Ç—Ä–∏—Ü–µ grid –Ω—É–∂–Ω–æ –Ω–∞–π—Ç–∏ –¥–ª–∏–Ω—É —Å–∞–º–æ–≥–æ –¥–ª–∏–Ω–Ω–æ–≥–æ "V-–æ–±—Ä–∞–∑–Ω–æ–≥–æ"
     * –¥–∏–∞–≥–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å–µ–≥–º–µ–Ω—Ç–∞.
     * –°–µ–≥–º–µ–Ω—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 1, –¥–∞–ª–µ–µ –∏–¥—ë—Ç —à–∞–±–ª–æ–Ω 2-0-2-0,
     * —Ä–∞–∑—Ä–µ—à—ë–Ω –æ–¥–∏–Ω –ø–æ–≤–æ—Ä–æ—Ç –Ω–∞ 90¬∞ –ø–æ —á–∞—Å–æ–≤–æ–π —Å—Ç—Ä–µ–ª–∫–µ.
     */
    public int LenOfVDiagonal(int[][] grid) {
        int n = grid.Length, m = grid[0].Length;
        int[][][] end = new int[4][][];
        int[][][] go = new int[4][][];
        for (int d=0; d<4; d++) {
            end[d]=new int[n][]; go[d]=new int[n][];
            for (int i=0;i<n;i++) {
                end[d][i]=new int[m];
                go[d][i]=new int[m];
                for (int j=0;j<m;j++) go[d][i][j]=1;
            }
        }

        (int,int)[] dirs = {(1,1),(-1,1),(1,-1),(-1,-1)};
        int[] cw={2,0,3,1};

        Func<int,int,bool> ok = (a,b)=>{
            if (a==1) return b==2;
            if (a==2) return b==0;
            if (a==0) return b==2;
            return false;
        };

        // end
        for (int d=0; d<4; d++) {
            int dx=dirs[d].Item1,dy=dirs[d].Item2;
            var xs=Enumerable.Range(0,n).ToList();
            var ys=Enumerable.Range(0,m).ToList();
            if (dx==-1) xs.Reverse();
            if (dy==-1) ys.Reverse();
            foreach (int i in xs) foreach (int j in ys) {
                int val=grid[i][j];
                int pi=i-dx,pj=j-dy;
                if (pi>=0&&pi<n&&pj>=0&&pj<m && ok(grid[pi][pj],val) && end[d][pi][pj]>0)
                    end[d][i][j]=end[d][pi][pj]+1;
                else end[d][i][j]=(val==1?1:0);
            }
        }

        // go
        for (int d=0; d<4; d++) {
            int dx=dirs[d].Item1,dy=dirs[d].Item2;
            var xs=Enumerable.Range(0,n).ToList();
            var ys=Enumerable.Range(0,m).ToList();
            if (dx==1) xs.Reverse();
            if (dy==1) ys.Reverse();
            foreach (int i in xs) foreach (int j in ys) {
                int ni=i+dx,nj=j+dy;
                if (ni>=0&&ni<n&&nj>=0&&nj<m && ok(grid[i][j],grid[ni][nj]))
                    go[d][i][j]=1+go[d][ni][nj];
                else go[d][i][j]=1;
            }
        }

        int ans=0;
        for (int d=0;d<4;d++) for (int i=0;i<n;i++) for (int j=0;j<m;j++)
            ans=Math.Max(ans,end[d][i][j]);

        for (int i=0;i<n;i++) for (int j=0;j<m;j++) for (int a=0;a<4;a++) {
            int b=cw[a];
            if (end[a][i][j]>0)
                ans=Math.Max(ans,end[a][i][j]+go[b][i][j]-1);
        }
        return ans;
    }
}

/*
''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks
*/