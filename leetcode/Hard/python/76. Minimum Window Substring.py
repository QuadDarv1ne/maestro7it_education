'''
https://leetcode.com/problems/minimum-window-substring/description/?envType=study-plan-v2&envId=top-interview-150
'''

from collections import Counter

class Solution:
    def minWindow(self, s, t):
        """
        –ù–∞—Ö–æ–¥–∏—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –ø–æ–¥—Å—Ç—Ä–æ–∫—É –≤ s, —Å–æ–¥–µ—Ä–∂–∞—â—É—é –≤—Å–µ —Å–∏–º–≤–æ–ª—ã –∏–∑ t (—Å —É—á—ë—Ç–æ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞).

        –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
        ----------
        s : str
            –ò—Å—Ö–æ–¥–Ω–∞—è —Å—Ç—Ä–æ–∫–∞.
        t : str
            –°—Ç—Ä–æ–∫–∞ —Å —Ç—Ä–µ–±—É–µ–º—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏.

        –í–æ–∑–≤—Ä–∞—â–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ:
        ----------------------
        str
            –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –ø–æ–¥—Å—Ç—Ä–æ–∫–∞ s, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è –≤—Å–µ —Å–∏–º–≤–æ–ª—ã t. –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞, –µ—Å–ª–∏ –Ω–µ—Ç —Ä–µ—à–µ–Ω–∏—è.

        –ê–ª–≥–æ—Ä–∏—Ç–º:
        ---------
        –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–≤–∞ —É–∫–∞–∑–∞—Ç–µ–ª—è –∏ —Å–ª–æ–≤–∞—Ä—å —Å—á–µ—Ç—á–∏–∫–æ–≤:
        - count_t —Ö—Ä–∞–Ω–∏—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–∞–∂–¥–æ–≥–æ —Å–∏–º–≤–æ–ª–∞ –≤ t,
        - count_window ‚Äî –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Ç–µ–∫—É—â–µ–º –æ–∫–Ω–µ,
        - formed ‚Äî —Å–∫–æ–ª—å–∫–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä—è—é—Ç —É—Å–ª–æ–≤–∏–µ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É,
        - –ø—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å—à–∏—Ä—è—Ç—å –∏ —Å—É–∂–∞—Ç—å –æ–∫–Ω–æ, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–µ.
        """
        if not t or not s:
            return ""

        dict_t = Counter(t)
        required = len(dict_t)

        left, right = 0, 0
        formed = 0
        window_counts = {}

        ans = float("inf"), None, None  # –¥–ª–∏–Ω–∞, –ª–µ–≤—ã–π, –ø—Ä–∞–≤—ã–π

        while right < len(s):
            character = s[right]
            window_counts[character] = window_counts.get(character, 0) + 1

            if character in dict_t and window_counts[character] == dict_t[character]:
                formed += 1

            while left <= right and formed == required:
                character = s[left]

                # –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
                if right - left + 1 < ans[0]:
                    ans = (right - left + 1, left, right)

                window_counts[character] -= 1
                if character in dict_t and window_counts[character] < dict_t[character]:
                    formed -= 1

                left += 1

            right += 1

        return "" if ans[0] == float("inf") else s[ans[1]:ans[2] + 1]

''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks