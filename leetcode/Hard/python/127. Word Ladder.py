'''
https://leetcode.com/problems/word-ladder/description/?envType=study-plan-v2&envId=top-interview-150
'''

from collections import deque

class Solution:
    def ladderLength(self, beginWord, endWord, wordList):
        wordDict = set(wordList)
        if endWord not in wordDict:
            return 0

        queue = deque([(beginWord, 1)])

        while queue:
            current_word, level = queue.popleft()

            for i in range(len(current_word)):
                for char in 'abcdefghijklmnopqrstuvwxyz':
                    next_word = current_word[:i] + char + current_word[i+1:]
                    if next_word == endWord:
                        return level + 1
                    if next_word in wordDict:
                        wordDict.remove(next_word)
                        queue.append((next_word, level + 1))

        return 0

''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks