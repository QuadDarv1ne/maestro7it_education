'''
https://leetcode.com/problems/sliding-window-maximum/description/
'''

from collections import deque

class Solution:
    def maxSlidingWindow(self, nums, k):
        """
        –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –º–∞–∫—Å–∏–º—É–º–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –æ–∫–Ω–∞ —Ä–∞–∑–º–µ—Ä–∞ k.
        –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è deque –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω–¥–µ–∫—Å–æ–≤ –≤ –ø–æ—Ä—è–¥–∫–µ —É–±—ã–≤–∞–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π.
        """
        q = deque()     # —Ö—Ä–∞–Ω–∏—Ç –∏–Ω–¥–µ–∫—Å—ã
        ans = []
        for i, x in enumerate(nums):
            # –£–¥–∞–ª—è–µ–º —É—Å—Ç–∞—Ä–µ–≤—à–∏–µ –∏–Ω–¥–µ–∫—Å—ã (–≤–Ω–µ –æ–∫–Ω–∞)
            if q and q[0] < i - k + 1:
                q.popleft()
            # –£–¥–∞–ª—è–µ–º –≤—Å–µ –∏–Ω–¥–µ–∫—Å—ã —Å –º–µ–Ω—å—à–∏–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
            while q and nums[q[-1]] <= x:
                q.pop()
            q.append(i)
            # –ï—Å–ª–∏ –æ–∫–Ω–æ —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–æ, –¥–æ–±–∞–≤–ª—è–µ–º –º–∞–∫—Å–∏–º—É–º
            if i >= k - 1:
                ans.append(nums[q[0]])
        return ans

''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks