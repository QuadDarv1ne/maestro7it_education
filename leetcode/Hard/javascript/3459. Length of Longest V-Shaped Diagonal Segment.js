/**
 * https://leetcode.com/problems/length-of-longest-v-shaped-diagonal-segment/description/?envType=daily-question&envId=2025-08-27
 */

/**
 * lenOfVDiagonal
 *
 * –í—ã—á–∏—Å–ª—è–µ—Ç –¥–ª–∏–Ω—É —Å–∞–º–æ–≥–æ –¥–ª–∏–Ω–Ω–æ–≥–æ V-–æ–±—Ä–∞–∑–Ω–æ–≥–æ –¥–∏–∞–≥–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å–µ–≥–º–µ–Ω—Ç–∞ –≤ –º–∞—Ç—Ä–∏—Ü–µ.
 *
 * –£—Å–ª–æ–≤–∏—è —Å–µ–≥–º–µ–Ω—Ç–∞:
 * 1. –ù–∞—á–∞–ª–æ —Å–µ–≥–º–µ–Ω—Ç–∞ –≤—Å–µ–≥–¥–∞ —Å —á–∏—Å–ª–∞ 1.
 * 2. –î–∞–ª–µ–µ –∑–Ω–∞—á–µ–Ω–∏—è –∏–¥—É—Ç –ø–æ —à–∞–±–ª–æ–Ω—É: 2 ‚Üí 0 ‚Üí 2 ‚Üí 0 ‚Üí ...
 * 3. –î–≤–∏–∂–µ–Ω–∏–µ —Ç–æ–ª—å–∫–æ –ø–æ –¥–∏–∞–≥–æ–Ω–∞–ª—è–º: ‚Üò, ‚Üô, ‚Üñ, ‚Üó.
 * 4. –†–∞–∑—Ä–µ—à—ë–Ω —Ä–æ–≤–Ω–æ –æ–¥–∏–Ω –ø–æ–≤–æ—Ä–æ—Ç –Ω–∞ 90¬∞ –ø–æ —á–∞—Å–æ–≤–æ–π —Å—Ç—Ä–µ–ª–∫–µ.
 * 5. –ï—Å–ª–∏ —Å–µ–≥–º–µ–Ω—Ç–∞ –Ω–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è 0.
 *
 * @param {number[][]} grid - –í—Ö–æ–¥–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞ —á–∏—Å–µ–ª.
 * @returns {number} –î–ª–∏–Ω–∞ —Å–∞–º–æ–≥–æ –¥–ª–∏–Ω–Ω–æ–≥–æ V-–æ–±—Ä–∞–∑–Ω–æ–≥–æ –¥–∏–∞–≥–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Å–µ–≥–º–µ–Ω—Ç–∞.
 */
let lenOfVDiagonal = function (grid) {
    const n = grid.length;
    const m = grid[0].length;
    const DIRS = [[1, 1], [1, -1], [-1, -1], [-1, 1]];
    const memo = Array.from({ length: n }, () => Array.from({ length: m }, () => Array(1 << 3).fill(0)));

    let ans = 0;

    for (let i = 0; i < n; i++) {
        for (let j = 0; j < m; j++) {
            if (grid[i][j] !== 1) continue;

            const maxs = [n - i, j + 1, i + 1, m - j];

            for (let k = 0; k < 4; k++) {
                if (maxs[k] > ans) {
                    ans = Math.max(ans, dfs(i, j, k, 1, 2) + 1);
                }
            }
        }
    }

    return ans;

    /**
     * –†–µ–∫—É—Ä—Å–∏–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è DFS –¥–ª—è –ø–æ–∏—Å–∫–∞ V-–æ–±—Ä–∞–∑–Ω–æ–≥–æ —Å–µ–≥–º–µ–Ω—Ç–∞
     *
     * @param {number} i - –¢–µ–∫—É—â–∞—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ X.
     * @param {number} j - –¢–µ–∫—É—â–∞—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ Y.
     * @param {number} k - –ò–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∏–∞–≥–æ–Ω–∞–ª–∏.
     * @param {number} canTurn - –§–ª–∞–≥, —Ä–∞–∑—Ä–µ—à—ë–Ω –ª–∏ –ø–æ–≤–æ—Ä–æ—Ç (1 –∏–ª–∏ 0).
     * @param {number} target - –û–∂–∏–¥–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Ç–µ–∫—É—â–µ–π –∫–ª–µ—Ç–∫–µ.
     * @returns {number} –î–ª–∏–Ω–∞ —Å–µ–≥–º–µ–Ω—Ç–∞ –æ—Ç —Ç–µ–∫—É—â–µ–π –ø–æ–∑–∏—Ü–∏–∏.
     */
    function dfs(i, j, k, canTurn, target) {
        i += DIRS[k][0];
        j += DIRS[k][1];

        if (i < 0 || i >= n || j < 0 || j >= m || grid[i][j] !== target) return 0;

        const mask = (k << 1) | canTurn;
        if (memo[i][j][mask] > 0) return memo[i][j][mask];

        let res = dfs(i, j, k, canTurn, 2 - target);

        if (canTurn === 1) {
            const maxs = [n - i - 1, j, i, m - j - 1];
            const nk = (k + 1) % 4;

            if (maxs[nk] > res) {
                res = Math.max(res, dfs(i, j, nk, 0, 2 - target));
            }
        }

        return (memo[i][j][mask] = res + 1);
    }
};

/*
''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks
*/