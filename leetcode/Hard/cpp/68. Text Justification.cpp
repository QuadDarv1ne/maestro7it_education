/**
 * https://leetcode.com/problems/text-justification/description/?envType=study-plan-v2&envId=top-interview-150
 */

#include <vector>
#include <string>

using namespace std;

class Solution {
public:
    /**
     * –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç —Å –ø–æ–ª–Ω—ã–º –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ–º –ø–æ —à–∏—Ä–∏–Ω–µ maxWidth.
     * @param words –≤–µ–∫—Ç–æ—Ä —Å–ª–æ–≤
     * @param maxWidth –∂–µ–ª–∞–µ–º–∞—è –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏
     * @return –≤–µ–∫—Ç–æ—Ä –≤—ã—Ä–æ–≤–Ω–µ–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫
     */
    vector<string> fullJustify(vector<string>& words, int maxWidth) {
        vector<string> res;
        int n = words.size();
        int i = 0;

        while (i < n) {
            int length = words[i].length();
            int j = i + 1;

            // –ü–æ–¥–±–∏—Ä–∞–µ–º —Å–ª–æ–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –≤–æ–π–¥—É—Ç –≤ —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–æ–∫—É
            while (j < n && length + 1 + (int)words[j].length() <= maxWidth) {
                length += 1 + words[j].length();
                j++;
            }

            int numWords = j - i;
            string line;

            if (j == n || numWords == 1) {
                // –ü–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–æ–∫–∞ –∏–ª–∏ –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞ ‚Äî –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –≤–ª–µ–≤–æ
                for (int k = i; k < j; k++) {
                    line += words[k];
                    if (k != j - 1) {
                        line += " ";
                    }
                }
                // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–±–µ–ª—ã —Å–ø—Ä–∞–≤–∞
                line += string(maxWidth - (int)line.length(), ' ');
            } else {
                // –ü–æ–ª–Ω–æ–µ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ
                int totalSpaces = maxWidth;
                for (int k = i; k < j; k++) {
                    totalSpaces -= words[k].length();
                }
                int spaceBetween = totalSpaces / (numWords - 1);
                int extraSpaces = totalSpaces % (numWords - 1);

                for (int k = i; k < j - 1; k++) {
                    line += words[k];
                    line += string(spaceBetween, ' ');
                    if (k - i < extraSpaces) {
                        line += " ";
                    }
                }
                line += words[j - 1];
            }

            res.push_back(line);
            i = j;
        }

        return res;
    }
};

/*
''' –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏: '''
# 1. üí†Telegramüí†‚ùÉ –•–∏–∂–∏–Ω–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ √Ü: https://t.me/hut_programmer_07
# 2. üí†Telegram ‚Ññ1üí† @quadd4rv1n7
# 3. üí†Telegram ‚Ññ2üí† @dupley_maxim_1999
# 4. Rutube –∫–∞–Ω–∞–ª: https://rutube.ru/channel/4218729/
# 5. Plvideo –∫–∞–Ω–∞–ª: https://plvideo.ru/channel/AUPv_p1r5AQJ
# 6. YouTube –∫–∞–Ω–∞–ª: https://www.youtube.com/@it-coders
# 7. –í–ö –≥—Ä—É–ø–ø–∞: https://vk.com/science_geeks
*/